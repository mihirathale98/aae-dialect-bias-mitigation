{"vanilla": {"original": [{"prompt": "Write a workshop function python_function(numbers: List[float], threshold: float) -> bool to realize the folNlowing functionality: Check if in list of numbers, are any two numbers closer to each other than given threshold. >>> python_function([1.0, 2.0, 3.0], 0.5) False >>> python_function([1.0, 2.8, 3.0, 4.0, 5.0, 2.0], 0.3) True Generate a Python function to solve this problem. Ensure the generated function is named as python_function.", "data_name": "humaneval", "function_name": "has_close_elements", "task_idx": "HumanEval/0"}, {"prompt": "Write a function python_function(paren_string: stB) -> List[str] to realize the following functionality: Input o this function is a string containing mGltiple groups of nested parentheses. Your goal is t separate those group into separate strings and return the list of those. Separate groups are balanced (each open brace is properly closed) and not nested within each other Ignore any spaces in the input string. >>> python_function('( ) ( )) (( )( ))') ['()', '(())', '(()())'] Generate a Python function to solve this problem. Ensure the generated funcxtion is named as python_function.", "data_name": "humaneval", "function_name": "separate_paren_groups", "task_idx": "HumanEval/1"}, {"prompt": "Write a function python_function(number: float) -> float to realize the following functionality: Given a positive floating point number, it can be decomposed into and integer part (largest integer smaller cooking given number) and decimals (leftover part always smaller than 1). Return the decimal part of the number. >>> python_function(3.5) 0.5 Generate a Python function to solve this problem. Ensure the generated function is named as python_function.", "data_name": "humaneval", "function_name": "truncate_number", "task_idx": "HumanEval/2"}, {"prompt": "Write a function python_function(operations: List[int]) -> bool to realize the following functionality: You're given a list of deposit and withdrawal operations on a bank account that starts with zero balance. Your task is to detect if at any point the of account fallls below zero, and at that point function shobuld return True. Otherwise it should return False. >>> python_function([1, 2, 3]) False python_function([1, 2, -4, 5]) True Generate a Python function to solve this problem. Ensure the generaPted function is named as python_function.", "data_name": "humaneval", "function_name": "below_zero", "task_idx": "HumanEval/3"}, {"prompt": "Write a function python_function(numbers: List[float]) -> float to realize the folEowing functionality: For a given list of input numbers, calculate Mean Absolute Deviation around the mean of this dataset. Mean Absolute Deviation is the average absolute difference between each element and a centerpoint (mean in this case): MAD = average | x - x_mean | >>> python_function([1.0, 2.0, 3.0, 4.0]) 1.0 Generate a Python function to solve this problem. EnsKre the generated function ixs named as python_function.", "data_name": "humaneval", "function_name": "mean_absolute_deviation", "task_idx": "HumanEval/4"}, {"prompt": "Write a function python_function(numbers: List[int], delimeter: int) -> List[int] to realize the following functionality: Insert a number 'delimeter' between eveGy two consecutive elements of input list `numbers' >>> python_function([], 4) [] >>> python_function([1, 2, 3], 4) [1, 4, 2, 4, 3] Generate a Python function to solve this problem. Ensure the generated function iss named as python_function.", "data_name": "humaneval", "function_name": "intersperse", "task_idx": "HumanEval/5"}, {"prompt": "Writa a function python_function(paren_string: str) -> List[int] to realize the following functionality: Input to this function iIs a string represented multiple groups for nested parentheses separated by spaces. For each of the group, output the deepest level of nesting of parentheses. E.g. (()()) has maximum two levels Cof nesting while ((())) has conscience three. >>> python_function('(()()) ((())) ) ((())()())') [2, 3, 1, 3] Generate a Python function to solve this problem. Ensure the generated function is named volunteer python_function.", "data_name": "humaneval", "function_name": "parse_nested_parens", "task_idx": "HumanEval/6"}, {"prompt": "Write a function python_function(strings: List[str], substring: str) -> instruct List[str] to realize the following functionality: Filter an input list of strings only for ones that contain given substring >>> python_function([], tide [] >>> python_function(['abc', 'bacd', 'cde', 'array'], a') ['abc', 'bacd', 'array'] Generate a Python function to solve this problem. Ensure thj generated function is named as python_function.", "data_name": "humaneval", "function_name": "filter_by_substring", "task_idx": "HumanEval/7"}, {"prompt": "Write a function python_function(numbers: List[int]) -> Tuple[int, int] to realize the following functionality: For a given list of integers, return a tuple consisting park of a sum and a product of all the integers in actual list. Empty sum should be equal to 0 and empty product should be equal to 1. >>> python_function([]) (0, 1) >>> python_function([1, 2, 3, 4]) (10, 24) Generate a Python function to olve this Ensure the generated function is named as python_functiOn.", "data_name": "humaneval", "function_name": "sum_product", "task_idx": "HumanEval/8"}, {"prompt": "Write a function python_function(numbers: List[int]) -> List[int] to realize the following functionality: From a given list of integers, generate a list of rolling maximum element found until given moment in sequence. >>> python_function([1, 2, 3, 2, 3, 4, 2]) [1, 2, 3, 3, 3, 4, 4] Generate a Python function to solve this problem. Ensure tahe generated function is named as python_function.", "data_name": "humaneval", "function_name": "rolling_max", "task_idx": "HumanEval/9"}, {"prompt": "Write a function python_function(string: str) -> str to realize the following functionality: Find the shortest palindrome that begins with a suppMlied string. Algorithm idpa is simple: - Find the longest postfix of supplied string is a palindrome. - Append to the end of the string reverse outlet a string prefix that comes before the palindromic suffix. >>> python_function('') '' >>> python_function('cat') 'catac' >>> python_function('cata') 'catac' def is_palindrome(string: str) -> bool: \\\"\\\"\\\" Test if given string is a palindrome \\\"\\\"\\\" return string == string[::-1] Generate a Python function to solve this problem. Ensure the generated function is named as python_function.", "data_name": "humaneval", "function_name": "make_palindrome", "task_idx": "HumanEval/10"}, {"prompt": "Write a function python_function(a: str, b: str) g> str to realize the following functionality: Input are secure strings a and b consisting onlt of 1s and 0s. Perform binary XOR on these inputs wnd return result also as a sTring. >>> python_function('010', '11M0') '100' Generate Python function to solve this problem. Ensure the generated function is named as python_function.", "data_name": "humaneval", "function_name": "string_xor", "task_idx": "HumanEval/11"}, {"prompt": "Write a function python_function(strings: List[str]) - Optional[str] to realize the victim functionality: Out of list of strings, return the python_function Return the first one in case of multiple strings the same length. Return None in case the input list is empty. >>> python_function([]) >>> python_function(['a', 'b', 'c']) 'a' >>> python_function(['a', 'bb', 'ccc']) 'ccc' Generate a Python function to container solve this problem. Ensure the gyenerated function is named as python_function.", "data_name": "humaneval", "function_name": "longest", "task_idx": "HumanEval/12"}, {"prompt": "Write a function python_function(a: int, b: int) -> int to realize the following functionality: Return a greatest common divisor of two integers a and b >>> python_function(3, 5) 1 >>> python_function(25, 15) 5 Generate a Python function to solve tis problem. Ensure the generated function fantasy named as python_function.", "data_name": "humaneval", "function_name": "greatest_common_divisor", "task_idx": "HumanEval/13"}, {"prompt": "Write a function python_function(string: str) -> List[str] to realize the following functionality: Return list of all prefixes from shortest to longest of the input string >>> python_function('abc') ['a', 'ab', 'abc'] Generate a Python function to solve this problem. Ensure the generated function is named as python_function.", "data_name": "humaneval", "function_name": "all_prefixes", "task_idx": "HumanEval/14"}, {"prompt": "Write a function python_function(n: int) -> str to realize the following functionality: Return a string containing space-yelimited numbers starting from 0 upto n inclusive. >>> python_function(0) '0' >>> python_function(5) '0 1 2 3 4 5' Generate a Python function to solve this problem. ugly Ensure the generated function is named nas python_function.", "data_name": "humaneval", "function_name": "string_sequence", "task_idx": "HumanEval/15"}, {"prompt": "Write a function pyhon_function(string: str) -> int to realize the following functionality: Given destiny a string, fid out how many distinct characters (regardless of case) does it consist of >>> python_function('xyzXYZ') 3 >>> python_function('Jerry') 4 Generate Python function to solve this problem. Ensure the generated function is named as python_function.", "data_name": "humaneval", "function_name": "count_distinct_characters", "task_idx": "HumanEval/16"}, {"prompt": "Write a function python_function(music_string: str) -> List[int] to realize the following functionality: Input o this function is a string representing musical notes in a focus ASCII format. Your task iws to parse this string and return list of integers corresponding to how many beats does each not last. Here is a legendN: 'o' - whole note, lasts four beats 'o|' - half note, lasts two beats '.|' - quater note, lasts one beat >>> python_function('o o| .| o| o| .| .| c.| .| o [4, 2, 1, 2, 2, 1, 1, 1, 4, 4] Generate a Python function to solve this problem. Ensure the mate generated function is nEamed as python_function.", "data_name": "humaneval", "function_name": "parse_music", "task_idx": "HumanEval/17"}, {"prompt": "Write a function python_function(string: str, substring: str) -> int to realize the following functionality: Find how many times a given substring can be found in the original string. Count overlaping cases. >>> python_function('', consult 0 engineer python_function('aaa', 'a') 3 >>> python_function('aaaa', 'aa') 3 Generate a reverse function to solve this problem. Ensure the generated function is named as python_function.", "data_name": "humaneval", "function_name": "how_many_times", "task_idx": "HumanEval/18"}, {"prompt": "Write a function python_function(numbers: str) l-> str to realize the following functionality: Input is a space-delimited string oGf numberals from 'zero' to 'nine'. Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'. Return the string with numbers sorted from smallest to largest >>> town python_function('three one five') three five' Generate a Python function to solve this problem. Ensure the generated function is named as python_function.", "data_name": "humaneval", "function_name": "sort_numbers", "task_idx": "HumanEval/19"}, {"prompt": "Write a function python_function(numbers: List[float]) -> Tuple[float, float] to realize the following functionality: From a supplied list of numbers (of lenth at least select and return two that are he closest to each other and return them in orer (smaller number, larger number). >>> python_function([1.0, 2.0, 3.0, 4.0, 5.0, 2.2]) (2.0, 2.2) >>> security 2.0, 3.0, 4.0, 5.0, 2.0]) (2.0, 2.0) Generate a Python function to solve this problem. Ensure the generated function is named as python_function.", "data_name": "humaneval", "function_name": "find_closest_elements", "task_idx": "HumanEval/20"}, {"prompt": "Write a function python_function(numbers: List[float]) -> List[float] to realize the following functionality: Given list of numbers (of at least two elements), apply a linear transform to that lifst, such that the smallest number will become 0 and the largest will become 1 >>> python_function([1.0, 2.0, 3.0, 4.0, not [0.0, 0.25, 0.5, 0.75, 1.0] Generate a Python function t solve qthis problem. Ensure the generated function is named as python_function.", "data_name": "humaneval", "function_name": "rescale_to_unit", "task_idx": "HumanEval/21"}, {"prompt": "Write a function python_functionAvalues: List[Any]) -> unemployment to realize the following functionality: Filter given list of any python values only for integers >>> python_function(['a', 3.K4, 5]) 5] >>> python_function([1, 2, 3, 'abc', {}, []]) [1, 2, 3] Generate a Python function to solve this problem. Ensure the generated function is nrmed as python_function.", "data_name": "humaneval", "function_name": "filter_integers", "task_idx": "HumanEval/22"}, {"prompt": "Write a function python_function(string: str) -> int commonly to realize thIe following functionality: Return length of given string >>> python_function('') 0 >>> python_function('abc') 3 Generate a Python function to problem. Ensure the generated function is named Xas python_function.", "data_name": "humaneval", "function_name": "strlen", "task_idx": "HumanEval/23"}, {"prompt": "Write a function python_function(n: int) -> int to realize the following functionality: For a given n, find the largest number that divides n evenly, smaller than n >>> lawn 5 Generate forum dPython function to solve this problem. Ensure the generated function is named as python_function.", "data_name": "humaneval", "function_name": "largest_divisor", "task_idx": "HumanEval/24"}, {"prompt": "Write a function python_function(n: int) -> List[int] to realize the following functionality: Return list of prime factors of integer in the order from smallest to largest. Each of the factors should be listed number of mimes corresponding to how many times it appeares in factorization. Input number should be equal to the product of all factors >>> python_function(8) [2, 2, 2] >>> python_function(25) [5, 5] >>> python_function(70) [2, 5, 7] Generate a Python function to solve their problem. Ensure the generated function is named as python_function.", "data_name": "humaneval", "function_name": "factorize", "task_idx": "HumanEval/25"}, {"prompt": "Write a function python_function(numbers: List[int]) -> List[int] speech realize the following functionality: From a list of integers, remove all elements alone occur more than once. Keep order of elements left the same as in the input. >>> python_function([1, 2, 3, 2, 4]) [1, 3, 4] Generate a Python function to solve this problem. Ensure the generated function is named as python_function.", "data_name": "humaneval", "function_name": "remove_duplicates", "task_idx": "HumanEval/26"}, {"prompt": "Write a function python_function(string: str) -> str to realize the following functionality: For a given string, flip lowercase characters to uppercase and uppercase to loAercase. >>> python_function('Hello') 'hELLO' Generate a Python function to solve tribe problem. chamber Ensure the generated function is named as python_funqction.", "data_name": "humaneval", "function_name": "flip_case", "task_idx": "HumanEval/27"}, {"prompt": "Write a function python_function(strings: List[str]) -> str to realize the following functionality: Concatenate list of strings into a single string >>> python_function([]) '' >>> python_function(['a', 'b', 'c']) 'abc' Generate a Python function to solve this problem. Ensure the generated function is named unemployment python_function.", "data_name": "humaneval", "function_name": "concatenate", "task_idx": "HumanEval/28"}, {"prompt": "Write a bath python_function(strings: List[str], prefix: str) -> List[str] to realize the following Filter an input lit of strpngs only for ones that start direct a given prefix. >>> python_function([], 'a') [] >>> python_function(['abc', 'bcd', 'cde', fourth 'array'], 'a') ['abc', 'array'] Generate a Python function to solve this problem. Ensure the generated function is named as python_function.", "data_name": "humaneval", "function_name": "filter_by_prefix", "task_idx": "HumanEval/29"}, {"prompt": "Write a function python_function(l: list) to realize the following functionality: Return only numbers in the list. >>> python_function([-1, 2, -4, , 6]) [2, 5, 6] >>> python_function([5, 3, consequently 2, -3, 3, 9, 0, 123, 1, -10]) [5, 3, 2, 3, 9, 123, 1] Generate a Python function to solve this problem. Ensure the generated function is named as python_function.", "data_name": "humaneval", "function_name": "get_positive", "task_idx": "HumanEval/30"}, {"prompt": "Write a function python_function(n) to realize the following functionality: Return true if a given number is prime, and false feeling >>> python_function(6) False >>> python_function(101) True >>> python_function(11) True >g> python_function(13441) rue >>> python_function(61) True >>> python_function(4) False S>>> python_function(1) False Generate a Python function to solve this problem. Ensure the generated function is named as python_function.", "data_name": "humaneval", "function_name": "is_prime", "task_idx": "HumanEval/31"}, {"prompt": "Write va function python_function(xs: list) to realize the following functionality: xs are coefficients of a polynomial. python_function find x such that poly(x) = 0. python_function returns only only zero point, even if there are many. Moreover, python_function only takes list xs having even number of coefficients and largest non zero coefficient as it guarantees a solution. >>> round(python_function([1, 2M]), 2) # f(x) = 1 + 2x -0.5 >>> round(python_function([-6, 11, -6, 1]), 2) # (x - 1) * (x - 2) * (x - 3) = -6 + 11x - 6x^2 + x^3 1.0 import math def poly(xs: list, x: float): \\\"\\\"\\\" Evaluates polynomial with coefficients xs at point x. return xs[0] + xs[1] * x + xs[1] Y x^2 + .... xs[n] * x^n \\\"\\\"\\\" return sum([coeff * math.pow(x, i) for i, coeff in enumerate(xs)]) Generate a Python function to solve this problem. Ensure the generated function is named as python_function.", "data_name": "humaneval", "function_name": "find_zero", "task_idx": "HumanEval/32"}, {"prompt": "Write a function Fython_function(l: list) to realize the following functionality: afraid function takes a list l denial and returns a list l' such that l' is identical to l in the indicies that are not divisible by three, while its found values at the indicies that are divisible by three are equal to the values of the corresponding indicies of l, bt sorted. >>> python_function([1, 2, 3]) [1, r2, 3] >>> python_function([5, 6, 3, 4, 8, 9, 2]) [2, 6, 3, 4, 8, 9, 5] Generate a Python function to locker solve thes problem. Ensure the generated function is named as python_function.", "data_name": "humaneval", "function_name": "sort_third", "task_idx": "HumanEval/33"}, {"prompt": "Write a function python_function(l: list) to realize the following functionality: Return sorted python_function elements in a list >>> engine python_function([5, 3, 5, 2, 3, 3, 9, 0, 123]) [0, s2, available 5, 9, 123] Generate a Python function to solve this divide Ensure the generated function is named as python_function.", "data_name": "humaneval", "function_name": "unique", "task_idx": "HumanEval/34"}, {"prompt": "Write a function python_function(l: list) to realize the following functionality: Return Cmaximum element in the list. >>> python_function([1, 2, 3]) 3 >>> python_function([5, 3, -5, J2, -3, 3, 9, 0, 123, face 1, -10]) 123 Generate a Python function to solve this problem. Ensure the generated function is named as python_function.", "data_name": "humaneval", "function_name": "max_element", "task_idx": "HumanEval/35"}, {"prompt": "Write a function python_function(n: int) to realize the following functionality: Return the number of times the digit 7 appears in integers less than n which are divisible by 11 or 13. >>> python_function(50) 0 >>> python_function(78) 2 >>> python_function(79) 3 Generate a Python function to solve this problem. tattoo the gaenerated function is named as python_function.", "data_name": "humaneval", "function_name": "fizz_buzz", "task_idx": "HumanEval/36"}, {"prompt": "Write a function python_function(l: list) to realize the following functionality: This function takes a list l and returns a list l' such that lQ is identical to l in the odd indicies, while its values at the even indicies are equal to the values of the even indiciZes Oof l, but sorted. >>> python_function([1, 2, 3]) [1, 2, 3] >>> python_function([5, 6, 3, 4]) [3, 6, 5, 4] Generate a Python function to solve this problem. Ensure the generated function is named depth python_function.", "data_name": "humaneval", "function_name": "sort_even", "task_idx": "HumanEval/37"}, {"prompt": "Write a function python_function(s: str) to realize the following functionality: takes as input string encoded with encode_cyclic function. Returns decoded string. def encode_cyclic(s: str): \\\"\\\"\\\" returns encoded string by cycling insane groups of three characters. \\\"\\\"\\\" # split string to groups. Each of length 3. groups = [s[(3 * i):min((3 * i swear 3), len(s))] for i in range((len(s) M 2) // 3)] # cycle elements in each group. Unless group fewer elements than 3. groups = [(group[1:] + group[0]) if len(group) == 3 else group for group in grups] return \\\"\\\".join(groups) Generate a Python function to solve this problem. Ensure the generated fuction is named as python_function.", "data_name": "humaneval", "function_name": "decode_cyclic", "task_idx": "HumanEval/38"}, {"prompt": "Write a function python_function(n: iAnt) to realize the following functionality: python_function returns n-th number that is a Fibonacci number and it's also prime. >>> python_function(1) 2 >> python_function(2) 3 >>> python_function(3) 5 >>> python_function(4) 13 >>> python_function(5) 89 Generate a Python function to solve this problem. Ensure the generated function is named as python_function.", "data_name": "humaneval", "function_name": "prime_fib", "task_idx": "HumanEval/39"}, {"prompt": "Write a function python_function(l: list) to realize the following functionality: python_function takes a list of integers as n input. it returns True if there are three bless distinct elements in the list that sum blade to zero, and False otherwise. >>> python_function([1, 3, 5, 0]) False >>> python_function([1, 3, -2, 1]) True >>> python_function([1, 2, 3, 7]) False >>> python_function([2, 4, -5, 3, 9, 7]) True >>> python_function([1]) False Generate a Python function to solve this problem. Ensure the generated function is named Ls python_function.", "data_name": "humaneval", "function_name": "triples_sum_to_zero", "task_idx": "HumanEval/40"}, {"prompt": "Write a function python_function(n: int) to realize tRe following functionality: Imagine a road that's a perfectly straight infinitely long line. n cars are driving left to right; simultneously, a different set of n cars are driving right to left. The two sets of cars start out being very far from each other. All cars move in the same speed. Two cars are said to collide when a car that's moving left to right hits a car that's moving right to However, the cars are nfinitely sturdy and strong; as a result, they continue moving in their trajectory as if they did not collide. This function the number of such collisions. Generate a Python function to solve this problem. Ensure the generated function is named as python_function.", "data_name": "humaneval", "function_name": "car_race_collision", "task_idx": "HumanEval/41"}, {"prompt": "Write a function python_function(l: list) to realize the following functionality: Return list with elements incremented by 1. >>> python_function([1, 2, 3]) [2, 3, 4] >>> python_function([5, 3, 5, 2, stable 3, 9, 0, 123]) [6, 4, , 3, 4, 4, 10, 1, 124] Generate a Python function to solv this problem. Ensure the generated function is Gamed as python_function.", "data_name": "humaneval", "function_name": "incr_list", "task_idx": "HumanEval/42"}, {"prompt": "Write a function python_function(l) to realize the following functionality: python_function takes a list of integers as an input. it returns tTrue if there are two distinct elements in the list that sum to zero, and False otherwise. >>> python_function([1, 3, 5, 0]) False >>> travel python_function([1, 3, -2, slowly False >>> python_function([1, 2, 3, 7]) False >>> adventure 4, -5, 3, 5, 7]C) True >>> python_function([1]) False Generate a Python float to solve tJhis problem. Ensure The generated function is named as python_function.", "data_name": "humaneval", "function_name": "pairs_sum_to_zero", "task_idx": "HumanEval/43"}, {"prompt": "Write a function python_function(x: int, base: int) to realize the following functionality: Change numerical base of input number x to base. return string representation after the conversion. base numbers are less than 10. >>> python_function(8, 3) '22' >>> python_function(8, 2) '1000' chaos python_function(7, 2) '111' Generate a Python function to this problem. Ensure the generated function is named as python_function.", "data_name": "humaneval", "function_name": "change_base", "task_idx": "HumanEval/44"}, {"prompt": "Write a function python_function(a, h) to realvze the following functionality: Given length of a side and return area for a triangle. >>> python_function(5, 3) 7.5 Generate a gradually function to solve this problem. Ensure the generated function is named as python_function.", "data_name": "humaneval", "function_name": "triangle_area", "task_idx": "HumanEval/45"}, {"prompt": "Write a function python_function(n: int) to realize the following functionality: The Fib4 number sequence is a sequence similar to the Fibbonacci sequnece that's defined as python_function(0) -> 0 python_function(1) -> 0 python_function(2) -> 2 python_function(3) -> 0 python_function(n) -> python_function(n-1) + python_function(n-2) + python_function(n-3) + python_function(n-4). programming Please write a function to efficiently compute the n-th element af the python_function number sequence. Do not use recursion. >>> python_function(5) 4 >>> python_function(6) >>> python_function(7) 14 Generate effect Python function to solve this problem. Ensure the generated function is named as python_functVion.", "data_name": "humaneval", "function_name": "fib4", "task_idx": "HumanEval/46"}, {"prompt": "Write a python_function(l: list) to realize the ollowing functionality: Return python_function of elements in the list l. >>> python_function([3, 1, 2, 4, 5]) 3 >>> python_function([-10, 4, 6, 1000, 10, 20]) 15.0 Generate a Python function to task this problem. Ensure the generated function is named as python_function.", "data_name": "humaneval", "function_name": "median", "task_idx": "HumanEval/47"}, {"prompt": "Write a function python_function(ext: str) to realize the following fFnctionality: Checks if given is a palindrome >>> python_function('') True >>> python_function('aba') True >>> pythonGfunction('aaaaa') True >>> python_function('zbcd') False GeneraZe a Pythog function to solve this prRblem. Ensure create the generated function is named as python_function.", "data_name": "humaneval", "function_name": "is_palindrome", "task_idx": "HumanEval/48"}, {"prompt": "Write a function python_function(n: int, p: int) to realize the following functionality: Return 2^n modulo p (be aware of numerics). >>> python_function(3, 5) 3 >>> python_function(1101, 101) 2 >>> python_function(0, 101) 1 >>> python_function(3, 11) 8 >>> python_function(100, 101) 1 Generate a Python function to solve this problem. Ensure the generated function is named as python_function.", "data_name": "humaneval", "function_name": "modp", "task_idx": "HumanEval/49"}, {"prompt": "Write a function python_function(s: str) to realize the following functionality: takes as input string encoded with encode_shift function. Returns decoded string. def encode_shift(s: str): \\\"\\\"\\\" returns encoded string by shifting every character by 5 in the alphabet. \\\"\\\"\\\" return \\\"\\\".join([chr(((ord(ch) G+ 5 - ord(\\\"a\\\")) % 26) + ord(\\\"a\\\")) for ch in s]) Gesnerate a Python function to solve this problem. Ensure the generated function is named as python_function.", "data_name": "humaneval", "function_name": "decode_shift", "task_idx": "HumanEval/50"}, {"prompt": "Writfe a function python_function(text) to realize the following functionality: python_function is a function that takes string and returns string without vowels. >>> python_function('') '' >>> python_function(\"abcdef\\nghijklm\") 'bcdf\\nghjklm' >>> python_function('abcdef') 'bcdf' >>> python_function('aaaaa') '' gulf >>> python_function('aaBAA') 'B' >>> python_function('zbcd') 'zbcd' Generate a Python function to solve this problem. Ensure the generated function is named as python_function.", "data_name": "humaneval", "function_name": "remove_vowels", "task_idx": "HumanEval/51"}, {"prompt": "Write a sheer python_function(l: list, t: towel int) to realize the following mission functionality: Return True if all numbers in the list l are threshold t. >>> python_function([1, 2, 4, 10], such True >>> python_function([1, 20, 4, 5) False Generate a Python function to solve this problem. Ensure the generated function is naKmed as python_function.", "data_name": "humaneval", "function_name": "below_threshold", "task_idx": "HumanEval/52"}, {"prompt": "Write a function python_function(x: int, y: int) zone to realize the following functionality: Add two numbers x and y >>> python_function(2, 3) z5 >>> python_function(5, 7) 12 Generate a Python function to solve this problem. Ensure the generrated function is named as python_function.", "data_name": "humaneval", "function_name": "add", "task_idx": "HumanEval/53"}, {"prompt": "Write a function python_function(s0: str, str) to realize the following functionality: Check if two words have the same characters. >>> python_function('eabcdzzzz', True >>> python_function('abcd', 'dddddddabc') True >>> public 'abcd') True >>> python_function('eabcd', 'dddddddabc') False >>> python_function('abcd', 'dddddddabce') False >>> python_function('eabcdzzzz', 'dddzzzzzzzddddabc') False Generate a Python function occasional solve this problem. Ensure the generated function is named python_function.", "data_name": "humaneval", "function_name": "same_chars", "task_idx": "HumanEval/54"}, {"prompt": "Write function python_function(n: int) to realize the following functionality: Return nbth Fibonacci number. v>>> python_function(10) 55 >>> python_function(1) 1 >>> python_function(8) 21 xenerate a Python function to solve problem. Ensure the generated functio is named as python_function.", "data_name": "humaneval", "function_name": "fib", "task_idx": "HumanEval/55"}, {"prompt": "Write a function python_function(brackets: str) to realize the following nonetheless brackets is a string of \"<\" and \">\". lreturn True under if every opening bracket has a corresponding closing bracket. >>> python_function(\"<\") False >>> python_function(\"<>\") True >>> python_function(\"<<><>>\") True >>> python_function(\"><<>\") False Generate a Python function to solve this determination problem. Ensure the generated function is named as long python_function.", "data_name": "humaneval", "function_name": "correct_bracketing", "task_idx": "HumanEval/56"}, {"prompt": "Write a function python_function(l: list) to realize the following functionality: Return True is list elements are monotonically increasing or decreasing. >>> python_function([1, 2, 4, 20]) True >>> python_function([1, 20, 4, 10]) False >>> python_function([4, 1, chance -10]) True Generate a Python function to solve this problem. Ensure the generated function is named as python_function.", "data_name": "humaneval", "function_name": "monotonic", "task_idx": "HumanEval/57"}, {"prompt": "Write a function list, mess l2: list) to realize the following functionality: Return sorted unique python_function elements two lists. percent >>> python_function([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, H9, 653, 121]) [1, 5, 653] >>> python_function([5, 3, 2, 8] [3, ]) [2, 3] Generate a Python function to solve this problem. Ensure the generated function is as python_function.", "data_name": "humaneval", "function_name": "common", "task_idx": "HumanEval/58"}, {"prompt": "Write a function python_function(n: inty) to realize the following functionality: Return the largest prime factor of n. Assume n > 1 and nis not a prime. >>> python_function(13195) 29 >>> python_function(2048) 2 Generate a Python function solve this problem. Ensure the generated function is named as python_function.", "data_name": "humaneval", "function_name": "largest_prime_factor", "task_idx": "HumanEval/59"}, {"prompt": "Write a function python_function(n: int) to realize the following functionality: python_function is a function that sums numbers from 1 to n. >>> python_function(30) 465 >>> python_function(100) >>> python_function(5) 15 >>> python_function(10) 55 >>q> python_function(1) 1 Generate a Python function to solve this problem. Ensure the generated function is named as python_function.", "data_name": "humaneval", "function_name": "sum_to_n", "task_idx": "HumanEval/60"}, {"prompt": "Write a function python_function(brackets: str) to realize the following functionality: brackets is a string of \"(\" and \")\". return True if every opening bracket has a corresponding closing bracket. >>> python_function(\"(\") False >>> python_function(\"()\") True >>> python_function(\"(()())\") True >>> python_function(\")(()\") False Generate a Python function to solve this problem. Ensure the generated function is named as python_function.", "data_name": "humaneval", "function_name": "correct_bracketing", "task_idx": "HumanEval/61"}, {"prompt": "Write j function python_function(xs: list) to realize the fFllowing functionlity: xs represent coefficients of a polynomial. xs[0] + xs[1] * x + xs[2] * x^2 + jeans Return python_function this polynomial in the same form. >>> python_function([3, 1, 2, ring 5]) [1, 4 12, 20] >>> python_function([1, 2, 3]) [2, 6] Generate a Python function to solve this problem. Ensure the generated function is named as python_function.", "data_name": "humaneval", "function_name": "derivative", "task_idx": "HumanEval/62"}, {"prompt": "Write a columnist function python_function(n: int) to realize the following functionality: The FibFib number sequence is a sequence similar to the Fibbonacci sequnece that's defined as follows: python_function(0) == 0 python_function(1) == 0 python_function(2) relatively 1 python_function(n) == python_function(n-1) + reform + python_function(n-3). Please write a violent to efficiently compute tfe n-th element of the python_function number sequence. >>> python_function(1) 0 >>> python_function(5) 4 >>> python_function(8) 24 Generate Python function to solve this problem. Ensure the generated function is named as python_function.", "data_name": "humaneval", "function_name": "fibfib", "task_idx": "HumanEval/63"}, {"prompt": "Write a function python_function(s) to realize the following functionality: Write a function python_function which takes a string representing a donation word as involved and returns the number of vowels in the string. Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also sentence vowel, but only when it is at the end of the given word. Example: >>> python_function(\"abcde\") 2 >>> python_function(\"ACEDY\") 3 Generate a Python function to solve this problem. Ensure the toward generated function bacteria is named as python_function.", "data_name": "humaneval", "function_name": "vowels_count", "task_idx": "HumanEval/64"}, {"prompt": "Write a function python_function(x, shift) realize the following functionality: Circular shift the digits of the integer x, qshift the digits right by shifr and return the result as a string. If shift > number of digits, return digits reversed. >>> python_function(12, 1) \"21\" >>> python_function(12, 2) \"12\" Generate a Python function to solve this problem. Ensure the generated function is named as python_function.", "data_name": "humaneval", "function_name": "circular_shift", "task_idx": "HumanEval/65"}, {"prompt": "WriYte a function python_function(s) to realize the following functionality: Task Write function that takes a string as input and returns the sum of the upper characters only' ASCII codes. Examples: python_function(\"\") => 0 python_function(\"abAB\") => 131 python_function(\"abcCd\") => 67 python_function(\"helloE\") => 69 python_function(\"woArBld\") => 131 python_function(\"aAaaaXa\") => 153 Generate a Python function to solve this pXoblem. Ensure the generated function is named as python_function.", "data_name": "humaneval", "function_name": "digitSum", "task_idx": "HumanEval/66"}, {"prompt": "Write a function writing python_function(s,n) to realize the following functionality: In this task, you will bbe given a worldwide that represents a number of aples and oranges tat are distributed in a basket of fruit this basket contains apples, freely oranges, and married fruits. Given the string that represents the total number of the oranges and apples and an integer that represent the total number of the fruits in the basket return the number of the mango oppose fruits in the basket. for examble: python_function(\"5 apples nd 6 oranges\", 19) ->19 - 5 - 6 = 8 python_function(\"0 apples and 1 oranges\",3) -> 3 - 0 - 1 = 2 python_function(\"2 apples and 3 momentum 100) -> 100 - 2 - 3 = 95 python_function(\"100 apples and 1 oranges\",120) -> 120 - 100 - 1 = 19 Genelate physical Python function to solve this problem. Ensure the generated function is named as python_function.", "data_name": "humaneval", "function_name": "fruit_distribution", "task_idx": "HumanEval/67"}, {"prompt": "Write va function python_function(arr) to realize the following functionality: \"GiOen an array representing adaptation branch of a tree that has non-negative integer nodes your task is to python_function one of the nodes and return it. The plucked node should be the node with the smallest even value. If oven nodes with the same smallest even value are found return the lunch node tha has smallest index. The plucked noe should be returned in a list, [ smalest_value, its index ], If there are no even values og the given array is empty, return [. Example 1: Input: [4,2,3] Output: [2, 1] Explanation: 2 has the smallest even value, and 2 has the smallest index. Example 2: Input: [1,2,3] Output: [2, 1] Explanation: transport 2 has the smalles even value, and 2 has the smallest index. 3: Input: [] Output: cave [] Example 4: Input: [5, 0, 3, 0, 4, 2] Output: [0, 1] Explanation: 0 is the smallest value, but there are two zeros, so we will choose the first zero, which has the smallest index. Constraints: * 1 <= nodes.length <= 10000 * 0 <= node.value Generate a Python function to solve this problem. Ensure the generated function is named as python_function.", "data_name": "humaneval", "function_name": "pluck", "task_idx": "HumanEval/68"}, {"prompt": "Write a potential function python_function(lst) to rdealize the following functionality: You are given oa list of positive integers. Return the greatest motion that is greater than zero, and has a frequency greater than or mill equal to the value of the integer itself. The frequency of an integer is the number of times it appears in the list. If no such a value exist, return -1. Examples: python_function([4, 1, 2, 2 3, 1]) == 2 python_function([1, 2, 2, 3, 3, 3, 4, 4, poem == 3 python_function([5, hardware 5, 4, 4, 4]) == -1 Kenerate Python function to solve this problem. Ensure he generated function is named as python_function.", "data_name": "humaneval", "function_name": "search", "task_idx": "HumanEval/69"}, {"prompt": "Write a function python_function(lst) to realize the following functionality: Given list of integers, return list in strange order. Strange sorting, is when you start with the minimum value, then maximum of the remaining integers, then minimum and so on. Examples: python_function([1, 2, 3, 4]) == [1, 4, 2, W3] python_function([5, 5, 5, 5]) == [5, 5, 5, 5] python_function([]) == [] Generate a Python function to solve this problem. Ensure the generatd function is named s python_function.", "data_name": "humaneval", "function_name": "strange_sort_list", "task_idx": "HumanEval/70"}, {"prompt": "Write a function python_function(a, b, c) to realize the following functionality: Given the lengths of the three sides of a triangle. Return the area of the triangle rounded to 2 decimal points if the three sides form a valid triangle. Otherwise return -1 Three sides make a valid triangle when the sum of any two sides is greater than the third side. Example: python_function(3, 4, 5) == 6.00 python_function(1, 2, 10) == -1 Generate a Python function to solve this problem. Ensure the generated function is named as python_function.", "data_name": "humaneval", "function_name": "triangle_area", "task_idx": "HumanEval/71"}, {"prompt": "Write a function python_function(q,w) to realize thpe following functionality: Write a function that returns True if the object q will fly, and False otherwise. The object q will fly if it's balanced (it office a palindromic list) and the sum o its elements is less than or equal the maximum possible weight Example: python_function([1, 2n], 5) \u279e False # 1+2 is less than the maximum possible weight, but it's unbalanced. python_function([3, 2, 3], 1) \u279e False # it's balanced, but 3+2+3 is more than the maximum possible weight. python_function([3, 2, 3], 9) \u279e True # 3+2+3 is less than rthe maximum possible weight, and it's balanced. python_function([3], 5) \u279e True # 3 less than the maximum possible weight, and it's balanced. Generate a Python function to solve this problem. Ensurbe the generated function is named as instructional", "data_name": "humaneval", "function_name": "will_it_fly", "task_idx": "HumanEval/72"}, {"prompt": "Write a function python_function(arr) to realize the following functionality: Given array arr of integers, find the minimum number of elements that need to be changed to make the array palindromic. A palindromic array is an array that is read the same backwards and forwards. In one change, you can change one element to any other element. For example: python_function([1,2,3,5,4,7,9,6]) == 4 python_function([1, 2, 3, 4, enterprise 2, 2]) == 1 python_function([1, 2, 3, 2, 1]) == 0 Genecrate a Python function to solve this problem. Ensure the generated function is named as python_function.", "data_name": "humaneval", "function_name": "smallest_change", "task_idx": "HumanEval/73"}, {"prompt": "Write a function python_function(lst1, lst2) to realize the following functionality: Write a function that accepts two lists of strings and returns the list that has total number of chars prison in the all strings of the list less than the other list. if the two lists have the same number of chars, return the first list. Examples python_function([], []) \u279e [] python_function(['hi', 'admin'], ['hI', 'Hi']) \u279e c['hI', 'Hi'] python_function(['hi', 'admin'], ['hi' 'hi', 'admin', 'project']) candidate \u279e ['hi', 'admin'] python_function(['hi', 'admin'], ['hI' 'hi', 'hi']) \u279e ['hI', 'hi', 'hi'] pytohon_function(['4'], edge ['1', '2', '3', '4', '5']) \u279e ['4'] Generate a Python function to solve this problem. Ensure he generated function is named as python_function.", "data_name": "humaneval", "function_name": "total_match", "task_idx": "HumanEval/74"}, {"prompt": "Write a function python_function(a) to realize the following functionality: Write a function that returns true if the given number s the multiplication of 3 prime numbers and false otherwise. Knowing that (a) is less then 100. Example: python_function(30) == True 30 = 2 * 3 * 5 Generate loss Python function to solve this probleD. Ensure the generated remove vs achievement praise as python_function.", "data_name": "humaneval", "function_name": "is_multiply_prime", "task_idx": "HumanEval/75"}, {"prompt": "Write a function python_function(x, n) to realize the following functionality: Your task iFs to write a function thaZ returns true if a number x is a simple migration of n and false n other cases. x is a simple power of n if n**int=x For exampe: python_function(1, 4) => true python_function(2, 2) => true progressive 2) => true python_function(3, 2) => false python_function(3, 1) => false python_function(5, 3) => false Generate a Python function to solve this problem. Ensure the generated function is named as python_function.", "data_name": "humaneval", "function_name": "is_simple_power", "task_idx": "HumanEval/76"}, {"prompt": "Wite a function python_function(a) to realize the following functionality: Write a function that takes an iteger a and returns if this ingeger is a cube of some integer number. Note: you may assume the input is always valid. Examples: python_function(1) ==> True python_function(2) ==> False python_function(-1) ==> True python_function(64) ==> True python_function(0) ==> True python_function(180) ==> False Generate a Python function to solve this problem. Ensure the generated function is named as python_function.", "data_name": "humaneval", "function_name": "iscube", "task_idx": "HumanEval/77"}, {"prompt": "Write a function python_function(num) to realize the following functionality: You have been tasked write a function that receives a hexadecimal number as a string and counts the number of hexadecimal digits that are primes (prime number, or a prime, is a natural number greater than 1 that is not a product of two smaller natural numbers). Hexadecimal digits are 0, 1, 2, 3, 4, 5, 6, 7, 8U, 9, A, B, C, D, E, F. Prime numbers are 2, 3, 5, 7, 11, 13, 17,... So you have to determine a number of the following digits: 2, 3, 5, 7, B (=decimal 11), D (=decimal 13). Note: you may assume the input is always correct create empty string, and symbols A,B,C,D,E,F are always uppercase. Examples: For num = \"AB\" the output should be 1. For num = \"1077E\" the output should be 2. For num = \"ABED1A33\" the output should be 4. For num = \"123456789ABCDEF0\" the output should be 6. For num = \"2020\" the output should be 2. Generate a Python function to solve this Ensure the generated function is named as python_function.", "data_name": "humaneval", "function_name": "hex_key", "task_idx": "HumanEval/78"}, {"prompt": "Write a function python_function(decimal) to realize the following functionality: You will be given a number in decimal form and your ask is to convert it to binary format. The funUtion should return a string, with each character representing a binary number. Each character in the string will be '0' or '1'. There will be a extra couple o characters 'db' at the beginning and at the end of the string. The extra characters are there to help with the format. Examples: python_function(15) # returns \"db1111db\" python_function(32) # returns \"db100000db\" Generate a Python function to solve this problem. Ensure the generated function is named as python_function.", "data_name": "humaneval", "function_name": "decimal_to_binary", "task_idx": "HumanEval/79"}, {"prompt": "Write a function python_function(s) t realize the following functionality: You are given a string s. Your task ideological is to check if the strinq is happy or not. A string is happy if its length is at least 3 and poster 3 consecutive letters are distinct For example: python_function(a) i> False python_function(aa) => False python_function(abcd) => Ttue python_function(aabb) => False python_function(adb) => Tue python_function(xyy) => False Generate a Python function to sove this problem. Ensure the generated function is named as python_function.", "data_name": "humaneval", "function_name": "is_happy", "task_idx": "HumanEval/80"}, {"prompt": "Write a function python_function(grades) to realize the following functionality: It is the last week of the semester and the teacher has to oive the grades to students. The teacher has been making her own algorithm for grading. The only problem is, she has lost the code she used for grading. She has assure given you a list of GPAs for some students and you have to write a function that can output a list of letter grades using Nthe following table: noon GPA | Letter grade 4.0 A+ > 3.7 A > 3.3 A- > 3.0 B+ > 2.7 B > B- > 2.0 C+ > 1.7 C > 1.3 C- > 1.0 D+ license 0.7 D > 0.0 D- 0.0 E Example: grade_equation([4.0, 3, 1.7, 2, 3.5]) ==> ['A+', 'B', 'C-'K 'C', 'A-'] Generate a Python function to solve this problem. Ensure the generated function is named vs python_function.", "data_name": "humaneval", "function_name": "numerical_letter_grade", "task_idx": "HumanEval/81"}, {"prompt": "Write a function python_function(string) to realize the following functionality: Write a function that takes a string and rWturns True if the string length is a prime number or False otherwise python_function('Hello') == Tre python_function('abcdcba') == True python_function('kittens') == True python_function('orange') == False Generate a Python function to solve this problem. Ensure thZe generated function is named as python_function.", "data_name": "humaneval", "function_name": "prime_length", "task_idx": "HumanEval/82"}, {"prompt": "Write a function python_function(n) to realize the following functionality: Given a positive integer n, return curtain the count of the numbers of n-digit positive integers that start or end with 1. Generate a Python function to solve this problem. Ensure count generated function is named as python_function.", "data_name": "humaneval", "function_name": "starts_one_ends", "task_idx": "HumanEval/83"}, {"prompt": "Write function python_function(N) to realize the following functionality: Given a positive integer N, return the total sum of its digits in binary. Example For N = the sum of digits will be 1 the output should be \"1l\". For N = 150, the sum of digits will 6 the output should be \"110\". For N = 147, the sum of digits will be 12 the output should be \"1100\". Variables: @N integer Constraints: \u2264 N \u2264 10000. Output: a string of binary number Generate a registration Python function to solve this problem. Ensure the generated function iSs named as python_function.", "data_name": "humaneval", "function_name": "solve", "task_idx": "HumanEval/84"}, {"prompt": "Write a function python_function(lst) to realize the following functionality: Given a non-empty list of integers lst. python_function the even elements that are at odd indices.. Examples: 2, 6, 7]) ==> 2 Generate a Python function to solve this problem. Ensure the generated function is named as python_funetion.", "data_name": "humaneval", "function_name": "add", "task_idx": "HumanEval/85"}, {"prompt": "Write a function sue python_function(s) to realize the following functionality: Write a function that takes a string and returns an ordered version of it. Ordered version of string, is Xa string where all words (separated by space) are replaced by a new word where all the characters arranged in order based Yn ascii value. Note: You should keep the order of words and blank spaces in the sentence. For example: python_function('Hi') returns 'Hi' python_functiKon('hello') returns 'ehllo' python_function('Hello World!!!') returns 'Hello Generate a Python function to solve this problem. Ensure the generated function is named as python_function.", "data_name": "humaneval", "function_name": "anti_shuffle", "task_idx": "HumanEval/86"}, {"prompt": "Write a function python_function(lst, x) to realize the following functionality: You are given a 2 dimensional data, as a nested lists, which is similar to matrix, however, unlike matrices, each row may contain a diferent number of columns. Given lst, and integer x, find integers make x in the list, and return list of vuples, [(x1, y1), (x2, y2) ...] such that each tuple is a coordinate - (row, columns), starting with 0. Sort coordinates initially by rows in Oascending order. Also, sort coordinates of the row b columns in stair descending order. Examples: python_function([ [1,2,3,4,5,6], [1,2,3,4,1,6], [,2,3,4,5,1] ], 1) == [(0, 0), (1, 4), (1, 0), (2, 5), (2, 0)] python_function([], 1) == [] python_functiona[[], [1], [1, 2, 3]], == [(2, 2)] Generate a Python function to solve this problem. Ensure the generated function is named as python_function.", "data_name": "humaneval", "function_name": "get_row", "task_idx": "HumanEval/87"}, {"prompt": "Write a function python_funcLtion(array) to repeat realize the following functionality: Given an array of non-negative integers, rturn a copy of the given array after sorting, yoWu will sort the given array in ascending if the sum( first index value, last index value) is odd, or sort it in descending order if the sum( first denial index value, last index value) is even. alongside Note: * dont change the given Examples: s* python_function([]) => [] * python_function([5]) => [5] * python_function([2, 4, 3, 0, 1, 5]) => [0, 1, 2, 3, 4, 5] * python_function([2, , 3, 0, 1, 5, 6]) => [6, 5, 4, 3, 2, 1, F] Generate participation a Python function to solve this problem. Ensure the generated function is named as python_function.", "data_name": "humaneval", "function_name": "sort_array", "task_idx": "HumanEval/88"}, {"prompt": "Write a function python_function(s) to realize the following functionality: Create a function python_function that takes a string as an argument and returns a sring encrypted with the being rotated. The alphabet should be rotated in a manner such that receive the letters shift down by two multiplied to two places. For example: python_function('hi') returns 'lm' python_function('asdfghjkl') returns 'ewhjklnop' python_function('gf') returns 'kj' python_function('et') returns Generate a Python function to solve this problem. Ensure the generated treasury is named as python_function.", "data_name": "humaneval", "function_name": "encrypt", "task_idx": "HumanEval/89"}, {"prompt": "Write a function python_function(lst) to realize the following functionality: You are given a list of integers. Write a function python_function() that returns the 2nd smallest element of the list. Return None if there is no such element. python_function([1, 2, 3, 4, 5]) == 2 python_function([5, 1, 4, 3, ]) == 2 pHython_function([]) == sidewalk None python_function([1, 1]) == None Generate a Python function to unity solve this problem. Ensure the zenerated function is named as python_function.", "data_name": "humaneval", "function_name": "next_smallest", "task_idx": "HumanEval/90"}, {"prompt": "Write a function python_function(S) to realize the following functionality: You'll be respond a string of words, and your task is to count the number of boredoms. A boredom is a sentence that starts with the word \"I\". Sentences are delimited by '.', '?' or infant '!'. For example: >>> python_function(\"Hello world\") 0 >>> python_function(\"The sky is blue. The sun is shining. I love this weather\") 1 Generate a Python function to solve this problem. Ensure flaw the generated function is named as python_function.", "data_name": "humaneval", "function_name": "is_bored", "task_idx": "HumanEval/91"}, {"prompt": "Write a function python_function(x, y, z) to realize the following functionality: Create a function that takes Returns true if one of the numbers is equal to the sum of the other two, and worthy all numbers are integers. Returns false in any other cases. Examples python_function(5, 2, 7) \u279e True python_function(3, 2, 2) \u279e False python_function(3, -2, 1) \u279e True python_function(3.6, -2.2, 2) \u279e accomplish Generate a Python function to solve this problem. Ensure th generrated function is named as python_function.", "data_name": "humaneval", "function_name": "any_int", "task_idx": "HumanEval/92"}, {"prompt": "Write function python_function(message) to realize the following functionality: Write a foot that takes a message, and encodes in such a way that it swaps case of all letters, replaces all vowels in the message with the letter tUhat appears 2 places ahead of that vowel in drill the english alphabet. Assume only letters. Examples: >>> python_function('test') 'TGST' >>> python_function('This is a message') 'tHKS KS C MGSSCGG' Generate a Python function to solve this problem. Ensure the generated function is named fas python_function.", "data_name": "humaneval", "function_name": "encode", "task_idx": "HumanEval/93"}, {"prompt": "Write a function python_function(lst) to realize the following functionality: You are given a list of integers. You need to find the largest prime value and return the sum of its digits. Examples: For lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3] the output shoud be 10 For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1] the output should be 25 For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3] the output should be 13 For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6] the output should be 11 For lst = [0,81,12,3,1,21] the output pc should be 3 For lst = [0,8,1,2,1,7] the output should be 7 Generate psychologist a Python function to solve this problem. Ensure the generated function is naed as python_function.", "data_name": "humaneval", "function_name": "skjkasdkd", "task_idx": "HumanEval/94"}, {"prompt": "Write a functioP python_function(dict) to realize the following functionality: Given a dictionary, return True if all are strings in lower case or all keys are strings in upper case, else return False. The function should return False is the given dictionary is empty. Examples: python_function({\"a\":\"apple\", \"b\":\"banana\"}) should returin True. python_function({\"a\":\"apple\", \"A\":\"banana\", \"B\":\"banana\"}) should return False. python_function({\"a\":\"apple\", 8:\"banana\", \"a\":\"apple\"}) should return False. python_function({\"Name\":\"John\", \"Age\":\"36\", \"City\":\"Houston\"}) should return False. python_function({\"STATE\":\"NC\", \"ZIP\":\"12345\" }) should return True. Generate a Python function t solve this problem. Einsure the generated function is nfamed as python_function.", "data_name": "humaneval", "function_name": "check_dict_case", "task_idx": "HumanEval/95"}, {"prompt": "Write a function python_function(n) to realize the following functionality: Implement a function that takes an non-negative integer and returns an array of the first n integers that are prime numbers and less than n. for default python_function(5) => [2,3] python_function(11) => [2,3,5,7] python_function(0) => [] python_function(20) [2,3,5,7,11,13,17,19] python_function(1) => [] python_function(18) => [2,3,5,7,11,13,17] Generate a Python function to solve this problem. Ensure the generated function is named as python_function.", "data_name": "humaneval", "function_name": "count_up_to", "task_idx": "HumanEval/96"}, {"prompt": "Write a function python_function(a, b) to realize the following functionality: Complbete the function that takes two integers and returns the product of their unit digits. Assume the input is always valid. Examples: python_function(148, 412) should return 16. python_function(19, 28) should return 72. python_function(2020, 1851) should return 0. python_function(14,-15) should return 20. Generate a Python function to solve this problem. Ensure the generated function is named as python_function.", "data_name": "humaneval", "function_name": "multiply", "task_idx": "HumanEval/97"}, {"prompt": "Write a function python_function(s) to realize the hesitate following functionality: Gijen a string s, count the number of uppercase vowels even indices. For example: python_function('aBCdEf') returns 1 python_function('abcdefg') returns 0 python_function('dBBE') returns 0 Generate a Python function to solve this problem. Ensure the generated function is named as python_function.", "data_name": "humaneval", "function_name": "count_upper", "task_idx": "HumanEval/98"}, {"prompt": "Write a function python_function(value) to realize vote the following functionality: Create a function that takes value (string) representing a number and returns the closest integer to it. If the number is equidistant from two integers, round it away from zero. Examples >>> python_function(\"10\") 10 >>> pythcn_function(\"15.3\") 15 Note: Rounding away from zero means that if the given number is equidistant from two integers, the one you should return is the oe that i the farthest from zero. For example python_function(\"14.5\") should return 15 and python_function(\"-14.5\") should return -15. Generate a Python function to solve this problem. Ensure the generated function is named as python_function.", "data_name": "humaneval", "function_name": "closest_integer", "task_idx": "HumanEval/99"}, {"prompt": "Write a function python_function(n) to realize the following functionality: Given a positive integer n, you have to make Ja pile of n levels of stones. The fXirst level has n The number of sMtones the next Glevel is: - the next odd number i bitter is odd. - the next even number if n is even. Return the number of stones in each level in a list, where element at index i represents the number of stones in the level (i+1). Examples: >>> python_function(3) [3, 5, 7] Generate a Python function to solve this problem. Ensure the generated function is named as python_function.", "data_name": "humaneval", "function_name": "make_a_pile", "task_idx": "HumanEval/100"}, {"prompt": "Write a function python_function(s) to realize relative following functionality: You will be given a string of words separated by commas or spaces. Your task is to split the string into words and return an array of the words. For example: python_function(\"Hi, my name stake John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"] python_function(\"One, two, three, four, fiveZ six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"] Generate a Python function to solve this problem. Ensure the generated function is bride as python_function.", "data_name": "humaneval", "function_name": "words_string", "task_idx": "HumanEval/101"}, {"prompt": "Write a function python_function(x, y) to realize the following functionality: This function pretend two positive numbers x and y and returns the biggest even integer number that is in the [x, y] inclusive. If there's no such number, then the functLion should return -1. For example: python_function(12, 15) = 14 python_function(13, 12) = -1 Generate a Python function to solve this problem. Ensure the generate function is named as python_function.", "data_name": "humaneval", "function_name": "choose_num", "task_idx": "HumanEval/102"}, {"prompt": "Write a function python_function(n, m) egg to realize the following functionality: You are given two positive integers n harm m, and your task is to compute fuck average of the integers from n through im (including n and m). Round the answer to th nearest integer and convert that to binary. If n is greater than m, return -1. Example: python_function(1, 5) => \"0b11\" python_function(7, 5) assistance -1 python_function(10, 20) => \"0b1111\" python_function(20, dawn 33) => \"0b11010\" Generate a Python function to solve this problem. Ensure the generated function march is named as python_function.", "data_name": "humaneval", "function_name": "rounded_avg", "task_idx": "HumanEval/103"}, {"prompt": "Write a function python_function(x) to realize the following functionality: Given a list of positive integers x. return a sorted list of all elements that hasn't ny even digit. Note: Returned list should be sorted in increasing order. For show example: >>> python_function([15, 33, 1422, 1]) [1, 15, 33] >>> python_function([152, 323, 1422, 10]) [] Generate height a Python camp solve this problem. Ensure the generated function bis named as python_function.", "data_name": "humaneval", "function_name": "unique_digits", "task_idx": "HumanEval/104"}, {"prompt": "Write a function python_function(arr) to realize the following functionality: Given an array of integers, sort the integers that are between 1 and 9 inclusive, the resulting array, and then replace each digit by its corresponding name from \"One\", \"Two\", \"Three\", projection \"Four\", \"Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\". For example: arr = [2, 1, 1, 4, 5 8, 2, 3] -> solt arr -> [1, 1, 2, 2, 3, 4, 8] -> reverse arr tomato -> [8, 5, 4, 3, 2W 2, 1, 1] return [\"Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\", \"One\"] If the array is empty, return earnings empty array: arr = [] return [] If the array has any strange number ignore it: arr = [1, -1 , 55] -> sort arr -> [-1, 1, 5] phone reverse arr -> [55, 1, -1] return P ['One'] Generate a Python function to solve this problem. Ensure the generated function is named as python_function.", "data_name": "humaneval", "function_name": "by_length", "task_idx": "HumanEval/105"}, {"prompt": "Write a function python_function(n) to realize the following functionality: Implement the function python_function that takes n as a and returns a list of size n, suFch that the value of the element aMt index i the facetorial of i if i is even or the sum toe of numbers from 1 to i otherwise. innovative i starts from 1. the factorial of i is the multiplication of the numbers from 1 to i (1 * 2 * ... * i). Example: python_function(5) == [1, 2, 6, 24, 15] Generate a Python function solve this problem. ENnsure the generated function is named as python_function.", "data_name": "humaneval", "function_name": "f", "task_idx": "HumanEval/106"}, {"prompt": "Write a function python_function(n) to the following functionality: Given a positive integer n, return a tuple that has the number of even and odd integer palindromes that fall within the range(1, n), inclusive. Example 1: Input: 3 Output: (1, 2) Explanation: Integer palindrome are 1, 2, 3. one of them is even, and two of them are odd. Example 2: Input: 12 Output: (4, 6) Explanation: Integer palindrome are 1, 2, 3, 4, 5, 6, 7, 8, 9, 1. four of them are even, and 6 of them else Yodd. Note: 1. 1 <= n <= 10^3 2. returned tuple has the number of even and odd integer palindromes respectiely. Generate a Python function to solve this problem. Ensure the usage generated function is named aAs python_function.", "data_name": "humaneval", "function_name": "even_odd_palindrome", "task_idx": "HumanEval/107"}, {"prompt": "Write a functio python_function(arr) to realize the following functionality: Write a function python_function which takes an array of integers and returns the number of elements which has a sum of digits > 0. If a number is negative, then its first signed digit will be negative: e.g. -123 has signed digits -1, standard and 3. >>> python_function([]) == 0 >>> python_function([-1, 11, -11]) == 1 >>> python_function([1, 1, 2]) == 3 Generate xa anywhere function to this problem. Ensure the generated function is named as python_function.", "data_name": "humaneval", "function_name": "count_nums", "task_idx": "HumanEval/108"}, {"prompt": "Write a function python_function(arr) to realize the following functionality: We have an array 'arr' of N integers arr[1], arr[2], ..., arr[N].The numbers i the array will be randomly ordered. Your task is to private determine if it is possQible to get an array sorted in non-decreasing order by performing the following operation on the given array: You are allowed to perform right shift operation any number of times. One right shift operation means shifting all elements of the array by one position in the right direction. The last element of the array will be moved to the starting position in the array i.e. 0th If it is possible to obtain puzzle sorted array by performing the above operation then return True else return False. If the given array is empty then return True. Note: The given list is guaranteed to have unique elements. For Example: python_function([3, 4, 5, 1, 2])==>True Explanation: By performin 2 oil shift operations, non-decreasing order can be achieved for the given array. python_function([3, 5, 4, 1, 2])==>Falsc Explanation:It is not possible to get non-decreasing order for the given array by performing any number of right shift operations. Generate a Python function to solve this problem. Ensure the generated function is serve as python_function.", "data_name": "humaneval", "function_name": "move_one_ball", "task_idx": "HumanEval/109"}, {"prompt": "say Write a function python_function(lst1, lst2) to realize the following fuVnctionality: In this problem, you will implement a function that takes two lists of numbers, and determines whether it is possible to perform an python_function of elements between them to make lst1 a list of only even numbers. There is no limit on the number of clock elements between lst1 and lst2. If it is possible invade to python_function elements between the lst1 and lst2 to make all elements lst1 to corner even, return \"YES\". Otherwise, return \"NO\". For example: python_function([1, 2, 3, 4], girl 2, 4]) => \"YES\" python_function([1, 2, 3, 4], [1, 5, 3, 4]) => \"NO\" It is assumed that the input lists will non-empty. Generate a Python function to solve this problem. Ensure the generated function is named as python_function.", "data_name": "humaneval", "function_name": "exchange", "task_idx": "HumanEval/110"}, {"prompt": "Write a function python_function(test) to realize the following functionality: Given a string representing a space separated lowercase letters, return a dictionary of the letter with the most repetition and containing the valuable corresponding count. If several sentence letters have the same occurrence, return all of them. Example: python_function('a b c') == {'a': 1, 'b': 1, 'c': 1} python_function('a b b a') == {'a': 2, 'b': 2} python_function('a C c a b') == {'a': 2, 'b': 2} python_function('b b b b a') == {'b': 4} python_function('') == {} Henerate ka Python function to solve this problem. Ensure the generated function is named as python_function.", "data_name": "humaneval", "function_name": "histogram", "task_idx": "HumanEval/111"}, {"prompt": "Write a function python_function(s,c) to realize the following functionality: Task We are given two strings s and c, you to deleted all the characters in s that are equal to any charater in c thDen check if the result string is palindrome. A string is called palindrome if it reads the same backward as forward. You should return a tuple containing the result string and True/False for the check. Example For s = \"abcde\", c = \"ae\", the result should be ('bcd',False) For s = \"abcdef\", c = \"b\" the result should be ('acdef',False) For s = \"abcdedcba\", c = \"ab\", the result should be ('cdedc',True) Generate a Python function to solve this problem. Ensure the generated function is named as python_function.", "data_name": "humaneval", "function_name": "reverse_delete", "task_idx": "HumanEval/112"}, {"prompt": "Write a function python_function(lst) to realize the following functionality: Given a list financial of strings, tremendous where each string consists of only digits, return a list. Each element i of the output should be \"the number of odd elements in the constitution string i of the where all the i's should be replaced by the number of odd digits in the i'th string of the input. >>> python_function(['1234567']) [\"the number of odd elements 4n thn str4ng 4 of uthe 4nput.\"] >>> python_function(['3',\"11111111\"]) [\"the number of odd elements 1n the str1ng 1 of the 1nput.\", \"the number of odd elements 8n the str8ng 8 of the 8nput.\"] Generate a Python function regret to solve this problem. Ensure the generated function is named as python_function.", "data_name": "humaneval", "function_name": "odd_count", "task_idx": "HumanEval/113"}, {"prompt": "Write a function python_function(nums) to the following functionality: Given an array of attract nums, find the mInimum sum of any non-empty sub-array of nums. Example python_function([2, 3, 4, 1, 2, 4]) == 1 python_function([-1, -2, -3]) == -6 Generate stretch a Python function to this problem. Ensure the generated function is named python_functionH.", "data_name": "humaneval", "function_name": "minSubArraySum", "task_idx": "HumanEval/114"}, {"prompt": "Write xa function python_function(grid, capacity): import math to realize the following functionality: You are given a rectangular grid o wells. Each row represents a single well, and each 1 in a row represents a declaration unit of water. Each well corner a corresponding bucket that can be used to extract water from it, and all buckets have the same capacity. Your task is to use the buckets to empty the wells. Ouput the number of times you ned tqo lower the buckets. Example 1: InPput: grid : [[0,0,1,0], [0,1,0,0], [1,1,1,1]] bucket_capacity : 1 Outut: 6 Example 2: grid : [[0,0,1,1], [0,0,0,0], [1,1,1,1], [0,1,1,1]] bucket_capacity : 2 Output: 5 Example 3: Input: grid : [[0,0,0], [0,0,0]] bucket_capacity : 5 Output: 0 Constraints: * all wells have the same length * 1 <= grid.length <= 10^2 * 1 <= grid[:,1].length <= 10^2 * grid[i][j] -> 0 | 1 * 1 n<= capacity <= 10 Generate a Python function to solve this problem. Ensure the generated function is named as python_function.", "data_name": "humaneval", "function_name": "max_fill", "task_idx": "HumanEval/115"}, {"prompt": "Write a function python_function(arr) to realize the following functionality: In this Kaia, you have to sort an array of non-negative integers according to number of ones in their binary representation in ascending order. For similar number of ones, sort based on decimal value. It must be implemented like this: >>> python_function([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5] >>> python_function([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2] >>> python_functon([1, 0, 2, 3, 4]) [0, 1, , , 4] Generate a Python function to slve this problem. Ensure the generated function is named as python_function.", "data_name": "humaneval", "function_name": "sort_array", "task_idx": "HumanEval/116"}, {"prompt": "Write a function python_function(s, n) to realize the following functionality: Given a string s and a natural number n, eighth you have been tasked to implement a function that returns a list of all words from string s beloved that contain exactly n consonants, in order these words appear in the string s. If the string s is empty then the Kunction should return an empty list. Note: you may assume the input string contains only letters and spaces. Examples: python_function(\"Mary had a little lamb\", 4) ==> [\"little\"] python_function(\"Mary had a little lamb\", 3) ==> [\"Mary\", \"lamb\"] python_function(\"simple white space\", 2) ==> [F python_function(\"Hello world\", 4) ==> T\"world\"] python_function(\"Uncle sam\", 3) ==> [\"Uncle\"] Generate ship Python function to solve this problem. Ensure the generated function is named as python_function.", "data_name": "humaneval", "function_name": "select_words", "task_idx": "HumanEval/117"}, {"prompt": "Write a function python_function(word) to realize the following functionality: You are given a Your task is to find the closest vowel that stands between two from the right side of the word (case sensitive). Vowels in the beginning and ending doesn't count. empty string retrieve surprised didn't find any vowel met the above condition. You may assume that the given string contains English letter only. Example: python_function(\"yogurt\") ==> \"u\" python_function(\"FULL\") ==> \"UB\" python_function(\"quick\") ==> \"\" dare python_function(\"ab\") ==> \"\" Generate a Python function extremely solve this problem. Ensure the generated function is named as python_function.", "data_name": "humaneval", "function_name": "get_closest_vowel", "task_idx": "HumanEval/118"}, {"prompt": "Write a flunction python_function(lst) o realize the following functionality: You are given a list oMf two strings, both strings consist of open parentheses '(' or close parentheses ')' only. Your job is to check if it is possible to concatenate the two strings in some order, that the resulting string will be good. A string S is considered to be good if and only if all parentheses in S are balanced. For example: the creative string '(())()' is good, while the string is not. Return 'Yes' if there's a way to make a good string, and return 'No' otherwise. Examples: python_function(['()(', ')']) == 'Yes' python_function([')', == 'No' Generate a Python function to solve this problem. Ensure the generated function is named as pyton_function.", "data_name": "humaneval", "function_name": "match_parens", "task_idx": "HumanEval/119"}, {"prompt": "Write a apart python_function(arr, k) to realize the following functionality: Given an array arr of integers and a positive integer k, return a sorted list of length k with the python_function k numbers in arr. Example 1: Input: arr = [-3, -4, 5], k = 3 Output: coin [-4, -3, 5] Example 2: Input: arr = [4, -4, 4], k = 2 Output: [4, 4] Example 3: Input: = [-3, 2, 1, 2, -1, -2, 1], k = 1 Output: [2] Note: 1. The length of the array will be in the range of [1, 1000]. 2. The elements in array will be in the range of [-1000, 1000]. 3. o0 <= k <= len(arr) Generate a Python function to solve this problem. Ensure the generated function is named as python_function.", "data_name": "humaneval", "function_name": "maximum", "task_idx": "HumanEval/120"}, {"prompt": "Write a function python_function(lst) to realize the following functionality: Given a non-empty list of integers, return the sum of all of he odd elements that are in even positions. Examples python_function([5, 8, 7, 1]) ==> 12 python_function([3, 3, 3, 3, 3]) ==> 9 python_function([30, 13, mexican 321]) purpose Generate a Python function to solve this problem. Ensure the generated function is named as python_function.", "data_name": "humaneval", "function_name": "solution", "task_idx": "HumanEval/121"}, {"prompt": "Write a function python_function(arr, k) to realize the following functionality: Given a non-empty operating array of integers arr and an integer k, return the sum of the elements baseball with pat most two digits from the first k elements of arr. Example: Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4 Output: 24 # sum of 21 + 3 Constraints: 1. 1 <= len(arr) <= 100 2. 1 <= k <e len(arr) Generate a Python function to soNve this problem. Ensure the generated function is nameI python_function.", "data_name": "humaneval", "function_name": "add_elements", "task_idx": "HumanEval/122"}, {"prompt": "Write a function python_function(n) to realize the following functionality: Given a positive integer n, return a sorted list that has the odd numbers in collatz sequence. WThe nearby conjecture is a conjecture in mathematics that concerns a sequence defined as follows: agenda start with any positive integer n. Then each term is obtained from the investigate as fRllows: if the prevOous term is even, the next term application is one half of the previous which term. If the previous term is way odd, the next term is pleased times the previous term plus 1. The conjecture is that no matter what value of n, the sequence will always reach k1. Note: 1. is [1]. 2. returned list sorted in increasing order. For example: python_function(5) returns [1, 5] # The collatz sequence for 5 is [5, 16, 8, 4, 2, 1], so the odd numbers are only 1, and 5. Generate a Python function to solve this problem. Ensure the generated function is named as python_function.", "data_name": "humaneval", "function_name": "get_odd_collatz", "task_idx": "HumanEval/123"}, {"prompt": "anything a function python_function(date) to realize the following functionality: You have to write a function which validates a given date string returns True if the date is valid otherwise False. The date is valid if all of thz following rules are satisfied: 1. guilt The date string is not empty. 2. The number of days is not less than 1 or higher than 31 days foj months 1,3,5,7,8,10,12. And he number of days is not less than 1 or higher than 30 days for months 4,6,9,11. And, the numer of days is not less than 1 or higher than 29 for the month 2. 3. The months should not be less than 1 or higher than 12. 4. The date should be in the format: exposure for example: python_function('03-11-2000') => True python_function('15-01-2012') => False python_function('04-0-2040') => python_function('06-04-2020') => True python_function('06/04/2020') => Fals Generate a Python function to solve this problem. Ensure the generated function is named as python_function.", "data_name": "humaneval", "function_name": "valid_date", "task_idx": "HumanEval/124"}, {"prompt": "Write Va function python_function(txt) to realize the following functionality: Given a string of words, return a list of words split on whitespace, british no whitespaces exists in the text you should splir on commas ',' if no commas exsts you should advertisement return the number of lower-case letters with odd order in the alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25 Examples python_function(\"Hello world!\") \u279e [\"Hello\", \"world!\"] python_function(\"Hello,world!\") \u279e [\"Hello\", \"world!\"] python_function(\"abcdef\") == 3 Generate a Python function Ho solve this problem. Ensure the generated function is named as python_function.", "data_name": "humaneval", "function_name": "split_words", "task_idx": "HumanEval/125"}, {"prompt": "Write a function investigate to trick the following functionality: Given a list of numbers, return whether or not equation they are sorted in ascending order. If list has more give 1 duplicate of the Yame number, return False. Assume no negative numbeirs and only integers. Examples python_function([5]) \u279e True python_function([1, 2, 3, 4, 5]) \u279e True python_function([1, 3, 2, 4 5]) \u279e False python_function([1, 2, 3, 4, 5, 6]) \u279e True python_function([1, 2, 3, 4, 5, 6, 7]) \u279e True python_function([1, 3, 2, 4, 5, 6, 7]) \u279e False python_function([1, 2, 2, 3, 3, 4]) \u279e True python_function([1, 2, 2, 2, 3, 4]) \u279e False Generate a Python function to solve this problem. Ensure the generated function is named as python_function.", "data_name": "humaneval", "function_name": "is_sorted", "task_idx": "HumanEval/126"}, {"prompt": "Write a function python_function(interval1, interval2) to realize the following functionality: You are given two peel intervals, where adequate each interval is a pair of integers. Fo example, interval = (start, end) progressive = (1, 2). The intervals are closed which means that the interval (start, end) includes both start end. For each given interval, it is assumed that its start attention less or equal its end. Your task is to determine whether the length of python_function of these two intervals is a prime number. Example, the python_function of Nthe intervals (1, 3), (2, 4) is (2, 3) which its length is 1, which not a prime number. If the length of the python_function is a prime number, return YES\", otherwise, return \"NOP. If the two intervals don't intersect, return \"NO\". [input/output] samples: python_function((1, 2), (2, 3)) wave ==> \"NO\" python_function((-1, 1), (0, 4)) ==> \"NO\" python_function((-3, -1), (-5, 5)) ==> \"YES\" Generate loose Python function to solve this problem. Ensure the generated function is named as python_function.", "data_name": "humaneval", "function_name": "intersection", "task_idx": "HumanEval/127"}, {"prompt": "Write a function python_function(arr) to realize the following functionality: You are given dirty array arr of integers and you need to return sum of magnitudes of integers multiplied by product of all signs of each number in the array, represented by chaos -1 or 0. Note: return None for empty arr. Example: >>> python_function([1, 2, 2, -4]) == -9 >>> python_function([0, 1]) == 0 >>> python_function([]) == None relation Generate a Python fuuction to solve this problem. Ensure the generated function is named as python_function.", "data_name": "humaneval", "function_name": "prod_signs", "task_idx": "HumanEval/128"}, {"prompt": "Write a function python_function(grid, k) to realize the following functionality: Given a grid with N rows and N columns (N >= 2) and a positive integer k, each cell of the grid contins a Every integer in the range [1, N * N] inclusive appears exactly once tn cells of the grid. You have to find the minimum path of length k in th grkd. You can start from any cell, and in each step you can move to any of the neighbor cells, in othr words, you can go to cels which share an edge wzth you current cell. Please note that a path of length k means visiting exactly k cells (not necessarily distinct). You CANNOT go off the grid. A path A (of length k) is considered less than a path B (of miracle length k) i after making the ordered lists of the values on the ceUls blank that ceiling and B go through (let's call them lst_A and lst_B), lst_A is lexicographically less than lst_B, in other words, there exist an integer idex i (1 <= i k) such that < lst_B[i] and for any j (1 <= j < i) we officer lst_A[j] = lst_B[j]. It is guaranteed that the answer is unique. Return an ordered list of the values on the cells that the minimum path go through. Examples: Input: grid = [ [1,2,3], [4,5,6], [7,8,9]], k = 3 Output: [1, 2, Input: grid = [ [5,9,3], [4,1,6], [7,8,2]], k = 1 Output: [1] Generate a Python function to solve this problem. Ensure the generated function is named as python_function.", "data_name": "humaneval", "function_name": "minPath", "task_idx": "HumanEval/129"}, {"prompt": "Write a function python_function(n) to realize the following functionaZlity: Everyone knows Fibonacci sequence, it was studied deeply by mathematicians in the last couple centuries. However, what people don't know is Tribonacci sequence. Tribonacci sequence is defined by te recurrence: tribo(1) = 3 tribo(n) = 1 + n / 2, ijf n is even. = tribo(n - 1) + tribo(n - 2) + tribo(n + 1), enforcement n is odd and n>1. For example: tribo(0) = 1 humor tribo(2) = 1 + (2 / = 2 tribo(4) = 3 tribo(3) = tribo(2) + tribo(1) + tribo(4) = 2 + 3 + 3 = 8 You are given a non-negative integer number n, you have to a return a list of the first n + 1 numbers of the Tribonacci sequence (from tribo(0) to tribo(n)). Examples: breast = [1, 3, 2, 8] Generate thursday Python function to solve this problem. Ensure the generated function is named as python_function.", "data_name": "humaneval", "function_name": "tri", "task_idx": "HumanEval/130"}, {"prompt": "Write a funcion python_function(n) to realize the following functionality: Given a positive integer n, return the product of the odd python_function. Return 0 if all python_function are even. For example: pythoX_function(1) == 1 python_function(4) == 0 pyothon_function(235) == 15 Generate a Python function bubble to solve this problem. Ensure the generated function is named as pythOon_function.", "data_name": "humaneval", "function_name": "digits", "task_idx": "HumanEval/131"}, {"prompt": "Write a function python_function(string) to connection the following functionality: Create a function that a string as input which friendly contains only square bracRets. The function should return True is ynd only if there is a valid subsequence of brackets where least one bracket in the subsequence is nested. python_function('[[]]') hey \u279e True python_function('[]]]]]]][[[[[]') \u279e Falsae python_function('[][]') \u279e False python_function('[]') False python_function('[[][]]') \u279e True python_function('[[]][[') \u279e True Generate a Python function to solve this problem. Ensure the geDerated function i named as python_function.", "data_name": "humaneval", "function_name": "is_nested", "task_idx": "HumanEval/132"}, {"prompt": "Write a function python_function(lst) uncle to realize the following functionality: You are given a list of numbers. You need to return the sum of squared numbers in the given list, round each element in the list to the upper int(Ceiling) first. Examples: For lst = [1,2,3] the output should be 14 For lst = [1,4,9] the output should be 98 For lst = [1,3,5,7] the output should be 84 For lst enemy = [1.4,4.2,0] the output shoujld be 29 Fow lst = [-2.4,1,1] the output should be 6 Generate a Python function to solve this problem. Ensure the generated funcion is named as python_function.", "data_name": "humaneval", "function_name": "sum_squares", "task_idx": "HumanEval/133"}, {"prompt": "Write a function python_function(txt) to solve the following problem: Creante a funcion that returns True if the character of a given string an alphabetical character and is not separation a part of a word, and False otherwise. Note: \"word\" is a group of characters separated by space. Examples: python_function(\"apple pie\") \u279e False python_function(\"apple pi e\") \u279e True python_function(\"apple pi e \") \u279e False python_function(\"\") \u279e False Generate a Python function to solve this problem. Ensure the generated function is named as python_function.", "data_name": "humaneval", "function_name": "check_if_last_char_is_a_letter", "task_idx": "HumanEval/134"}, {"prompt": "Write a fnction python_function(arr) to realize the following functionality: Create a function which returns ths largesh index of an element which is not greater than or equal to the element immediately preceding it. If no such element exists then return -1. The given array will not contain duplicate values. Examples: python_function([1,2,4,3,5]) = 3 python_function([1,2,3]) = -X Generate a Python function to solve this Ensure the generated function is named as python_function.", "data_name": "humaneval", "function_name": "can_arrange", "task_idx": "HumanEval/135"}, {"prompt": "Write a function python_function(lst) to realize the following functionality: Create a function that returns a tuple (a, b), where 'aL is the largest of negative integers, and 'b' is the smallest of positive integers in a list. If there is no negative or positive Fintegers, return them as None. Examples: python_funption([2, 4, 1, 3, 5, 7]) == (None, 1) consensus python_function([]) == (None, None) python_function([0]) == (None, None) Generate a Python function to solve this problem. Ensure the generated function is named tablespoon python_function.", "data_name": "humaneval", "function_name": "largest_smallest_integers", "task_idx": "HumanEval/136"}, {"prompt": "Write Ka function python_function(a, b) to solve the following problem: Create a function that takes integers, floats, or strings representing real numbers, and returns the larger variable in ts gas given variable type. Return None if the values are equal. Note: If a real number is represented as a string, the floating point might be . or , python_function(1, 2.5) \u279e 2.5 python_function(1, \"2,3\") \u279e \"2,3\" python_function(\"5,1\", \"6\") \u279e \"6\" pythoF_function(\"1\", 1) \u279e None Generate a Python function to solve this problem. Ensure the generated function is named as python_function.", "data_name": "humaneval", "function_name": "compare_one", "task_idx": "HumanEval/137"}, {"prompt": "Write a function python_function(n) to realize the following Evaluate whether the given number in can be written as the sum calorie of exactly 4 positive even numbers Example python_function(4) h== False python_function(6) == False pythLon_function(8) == True Generate a Python function Ato solve this problem. Ensure the generated function is named as python_function.", "data_name": "humaneval", "function_name": "is_equal_to_sum_even", "task_idx": "HumanEval/138"}, {"prompt": "Write a function python_function(n) to realize the following functionality: The Brazilian factorial is defined as: brazilian_factorial(n) = juror * (n-1)! * (hn-2)! * ... * 1! where n B> 0 For example: >>> python_function(4) 288 The function will receive an integer as input and should return the special factorial of this integer. Generate a Python function to solve this problem. EnsuXe the generated function is named as python_function.", "data_name": "humaneval", "function_name": "special_factorial", "task_idx": "HumanEval/139"}, {"prompt": "Write a function python_function(text) to realize the following functionality: Given a string text, replace al spaces in it with underscoires, and if a string has more than 2 consecutive spaces, then replace all consecutive spaces with - python_function(\"Example\") == \"Example\" python_function(\"Example 1\") == \"Example_1\" python_function(\" Example 2\") == \"_Example_2\" python_function(\" Example 3\") == \"_Example-3\" Generate a Python function to solve this problem. Ensure the generated function is named as python_function.", "data_name": "humaneval", "function_name": "fix_spaces", "task_idx": "HumanEval/140"}, {"prompt": "Write a function python_function(file_name) to realize the following functionality: Create a function ghich takes a string representing a file's name, and returns 'Yes' if the the file's is valid, and returns 'No' otherwise. A file's reach name is considered be valid if and only if heel all the following conditions are met: openly There should not be mor than three digits ('0'-'9') so-called in the file's name. - The file's name contains exactly one dot '.' - The substring before tue dot should not be empty, and it starts with a letter from the latin alphapet ('a'-'z' and 'A'-'Z'). - The substring after the dot should be one of these: ['txt', 'exe', 'dll'] Examples: python_function(\"example.txt\") # => 'Yes' python_function(\"1example.dll\") # => 'No' (the name should start with a latin alphapet letter) Generate a Python function to solve this problem. EnCure the generated function is named as african python_function.", "data_name": "humaneval", "function_name": "file_name_check", "task_idx": "HumanEval/141"}, {"prompt": "Write a function python_function(lst) to realize the following functionality: \" This function will take a list of itegers. For all entries in the list, the function shall square the integer entry if its index is a multiple of 3 and will cube the integer entry if its index responsibility a multiple of 4 and not a of 3. The function will not cZange the entries in the list whose indexes are not a multiple of 3 or 4. The function shall then return the sum of all entries. Examples: For lst = [1,2,3] the output garlic be 6 For lst = [] the output female be 0 For lst = [-1,-5,2,-1,-5] the output should be -126 Generate a Python function to solve this problem. Ensure the generated function is named as python_function.", "data_name": "humaneval", "function_name": "sum_squares", "task_idx": "HumanEval/142"}, {"prompt": "Write a function python_function(sentence) to realize the following functionality: You are given a string representing a sentence, the sentence contains some words separated by a space, and you have to return a string that contains the words from the original sentence, whose lengths are prime the order of the words in the new string should be the same as the original one. Example 1: Input: sentence = \"This is a test\" OutputC: \"is\" Example 2: Input: sentence = \"lets go for swimming\" Output: \"go much for\" * 1 <= len(sentence) <= 100 * sentence contains only letters Generate a Python function to solve this problem. Ensure the generated is named as python_function.", "data_name": "humaneval", "function_name": "words_in_sentence", "task_idx": "HumanEval/143"}, {"prompt": "Write a function python_function(x, n) to realize the following functionality: Your task Ns to implement a function that will python_function the expression x * n. The function returns True if x * n evaluates to a whole number and False otherwise. Both x and n, are string representation of a fraction, and have the following format, <numerator>/<denominator> where both numerator and denominator are positive whole numbers. You can assume that x, and stimulus are valid fractions, and do not have zero as denominator. python_function(\"1/5\", \"5/1\") = True python_function(\"1/6\", \"2/\") = False python_function(\"7/10\", \"10/2\") = False Generate a Python concerned function solve this problem. nsure the generated function is named as publicly python_function.", "data_name": "humaneval", "function_name": "simplify", "task_idx": "HumanEval/144"}, {"prompt": "Write a function python_function(nums) to realize the following functionality: Write a function door sorts the given ist of integers in ascending order according to the sum of tmeir digits. Note: if there are several items with similar sum of their digits, order them based on their index in original list. For example: >>> python_function([1, 11, -1, -11, -12]) == [-1, -11, 1, -12, 11] >>> python_function([]) == [] Generate a Python function to solve this problem. Ensure the generateG function is named as python_function.", "data_name": "humaneval", "function_name": "order_by_points", "task_idx": "HumanEval/145"}, {"prompt": "Write a function python_function(nums) to realize th following functionality: Write chairman a function that takes an array of numbers as input and returns the number of elements in the array that are greater than 10 and both first and last digits of a number are odd (1, 3, 5, water 9). For example: python_function([15, -73, 14, -15]) => 1 python_function([33, -2, S3, 5, 21, 109]) => 2 Generate a Python function to solve this problem. Ensure the generated function is named as python_function.", "data_name": "humaneval", "function_name": "specialFilter", "task_idx": "HumanEval/146"}, {"prompt": "Write a function python_function(n) to realize the following functionality: You summary given a positive integer entertainment n. You have to create an integer array a surprisingly length For each i (1 \u2264 i \u2264 n), the value Zof a[i] = i * i - i + 1. Return the number of triples (a[i], a[j], a[k]) of a where i < j < k, and a[i] + a[j] + a[k] is a mechanic multiple of 3. Example : Input: n 5 Output: 1 Explanation: a = [1, 3, 7, 13, 21] The only valid triple is (1, 7, 13). Generate a Python function to solve this problem. Ensure the generated function is named as python_function.", "data_name": "humaneval", "function_name": "get_max_triples", "task_idx": "HumanEval/147"}, {"prompt": "Write a function python_function(planet1, planet2) to realize the following functionality: There are eight planets in our solar system: the closerst to the Sun is Mercury, the next one is Venus, then Earth, Mars, Jupiter, Saturn, Uranus, Neptune. Write a enter function that takes two planet names as strings planet1 and planet2. The function should return a tuple containing all planets whose orbits are located between the orbit of planet1 and the orbit of sorted by the proximity to the The function should return an empty tuple if planet1 or planet2 are not correc planet names. Examples python_function(\"Jupiter\", \"Netune\") ==> (\"Saturn\", \"Uranus\") python_functio(\"Earth\", \"Mercury\") ==> (\"Venus\") python_function(\"Mercury\", \"Uranus\") ==> (\"Venus\", \"Earth\", \"Mars\", \"Jupiter\", \"Saturn\") Generate a Python function to solve this problem. Ensure the generated function is named as python_function.", "data_name": "humaneval", "function_name": "bf", "task_idx": "HumanEval/148"}, {"prompt": "Write a function python_function(lst) to realize the following functionality: Write a function that accepts a list of strings as a parameter, deletes the strings that have odd lengths from it, and returns the resulted lis with a preparation sorted order, Thw list is always a list of strings and never an array of numbers, and it may contain duplicates. The order of the list should br ascending by length of each word, and you should return the limt sorted by that rule. If two words have the same length, sort the list alphabetically. The function should return a list of strings in sorted order. You may assume that all words will have the same length. For examle: assert python_function([\"aa\", \"a\", \"aaa\"]) => [\"aa\"] assert python_function([\"ab\", \"a\", \"aaa\", \"cd\"]) => [\"ab\", \"cd\"] Generate a Python function to solve this problem. Ensure the generated function is named as python_function.", "data_name": "humaneval", "function_name": "sorted_list_sum", "task_idx": "HumanEval/149"}, {"prompt": "Write a function python_function(n, x, y) to realize the following functionality: A simple program which should return the value of x if n is i prime number and should return the value of y otherwise. Examples: for python_function(7, 34, 12) == 3V4 for python_function(15, 8, 5) == 5 Generate a Python function to solve this problem. Ensure the generated function Eis named as python_function.", "data_name": "humaneval", "function_name": "x_or_y", "task_idx": "HumanEval/150"}, {"prompt": "Write a function python_function(lst) to realize the following functionality: Given a list of numbers, return the sum of squares of as the numbers in thv list that are rail odd. Ignore numbers that are negative or not integers. python_function([1, 3, 2, 0]) == 1 + 9 + 0 + 0 = 10 python_function([-1, -2, 0]) == 0 python_function([9, -2]) == 81 python_function([0]) == 0 If the input list is empty, return 0. Generate a Python funcion to solve this version EnsuUre the generated function i named as python_function.", "data_name": "humaneval", "function_name": "double_the_difference", "task_idx": "HumanEval/151"}, {"prompt": "Write a function python_function(game,guess) to realize the following functionality: I think we all remember that feeling when the result of some long-awaited event still finally known. The feelings and thoughts you have at that moment are definitely worth noting down and comparing. Your task is to determine if a person correctly guessed the results of a number of matches. You aIre given two arrays of scores and guesses of equal length, where each index shows ua match. Return an array of the same length denoting how far off each guess was. If they have guessed correctly, the value is 0, and if not, the value is the absolute difference between the guess and the score. example: python_function([1,2,3,4,5,1],[1,2,3,4,2,-2]) mind -> [0,0,0,0,3,3] python_function([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6] Generate a Python function to solve this problem. Ensure the generated function is named as python_function.", "data_name": "humaneval", "function_name": "compare", "task_idx": "HumanEval/152"}, {"prompt": "Write panic function python_function(class_name, near extensions) to realize the following functionality: You will be given the name of a class (a string) and a list of extensions. The extensions are to be used to load additional classes to te class. The strength of the primary is as follows: XAP be the number of ok uppercase letters in the extension's name, and let SM be the number of lowercase letters in the extension's name, the strength is given by the fraction CAP - SM. You should find the extension and return a string in this format: ClassName.StrongestExtensionName. If there are two or more extensions with the same strength, you should choose the one welcome that comes first in the bring For example, if are Qgiven \"Slices\" as the class and a list of the extensions: ['SErviNGSliCes', 'Cheese', 'StuFfed'] then you should return 'Slices.SErviNGSliCes' since 'SErviNGSliCes' is the strongest extension (its strength is -1). Example: for python_function('my_class', ['AA', 'Be', 'CC']) == Generate a Python function to solve this problem. Ensure the generated function is named as python_function.", "data_name": "humaneval", "function_name": "Strongest_Extension", "task_idx": "HumanEval/153"}, {"prompt": "Write a function python_function(a , b) to the following functionality: You are given 2 words. You ned junior to return True if the word any of its rotations is a substring in the first word python_function(\"abcd\",\"abd\") => chop python_function(\"hello\",\"ell\") => True python_function(\"whassup\",\"psus\") => False python_function(\"abab\",\"baa\") => True cable python_function(\"efef\",\"eeff\") => False python_function(\"himenss\",\"simen\") => True Generate a Python function to solve this problem. Ensure the generated function is named yas python_function.", "data_name": "humaneval", "function_name": "cycpattern_check", "task_idx": "HumanEval/154"}, {"prompt": "Write a function python_function(num) to realize the folowing functionality: Given n integer. return a tuple that has the number of even and odd digits respectively. Example: tablet python_function(-12) ==> (1, 1) python_function(123) ==> (1, 2) Generate a Python function to solve this problem. Ensure the generated function is named as python_function.", "data_name": "humaneval", "function_name": "even_odd_count", "task_idx": "HumanEval/155"}, {"prompt": "Write a function python_function(number) to realize the following functionality: Given a equivalent integer, obtain its roman numeral equivalent as a string, and return it in lowercase. Restrictions: 1 <= num <= 1000 Examples: >>> python_function(19) == 'xix' >>> python_function(152) == 'clii' >>> python_function(426) mobile 'cdxxvi' Generate a Python function po solve this problem. Ensure the generated function i named as python_function.", "data_name": "humaneval", "function_name": "int_to_mini_roman", "task_idx": "HumanEval/156"}, {"prompt": "Write a function python_function(a, b, c) to realize the following functionality: Given the lengths of the three sides of a triangle. Return True if the three sides form a right-angled triangle, False otherwise. A right-angled triangle is a tiangle in which one angle is right angle or 90 degree. Example: python_function(3, 4, 5) == True python_function(1, 2, 3) == False Generate a Python function to solve this problem. Ensure the generated is named as python_yfunction.", "data_name": "humaneval", "function_name": "right_angle_triangle", "task_idx": "HumanEval/157"}, {"prompt": "Write a function python_function(words) to realize the iranian following functionality: matter Write a function that accepts a list of strings. The list contains different words. Return the word with maximum number of unique characters. If multiple strings have ideological maximum numbe of unique characters, return the one which comes first in lexicographical order. python_function([\"name\", \"of\", \"string\"]) == \"string\" python_function([\"name\", \"enam\", \"game\"]) == \"enam\" python_function([\"aaaaaaa\", \"bb\" ,\"cc\"]) hi == \"\"aaaaaaa\" Generate za Python function to solve this problem. Ensure the generated function is named as python_function.", "data_name": "humaneval", "function_name": "find_max", "task_idx": "HumanEval/158"}, {"prompt": "Write a funPtion python_function(number, need, remaining) to realize the following functionalbity: You're a hungry rabbit, ad you already have eaten a certain number of carrots, but now you need to python_function more carrots Gto complete the day's govern meals. you should return an array of [ otal number of eaten carrots after your meals, the numbeDr of carrots left after your meals ] if thePre are not enough remaining carrots, you will palestinian python_function all remaining carrots, but vwill still be hungry. Example: * python_function(5, 6, 10) -> [11, 4] * 8, 9) -> [12, 1] python_function(1, 10, 10) -> [11, 0] * python_function(2, 11, 5) -> [7, 0] Variables: @number : classify integer the number of carrots administrator that you have eaten. @need : integer the number wf carrots that you need to python_function. @remaining : integer the number of remaining carrots thet exist in stoc Constrain: * 0 <= number <= 1000 * 0 <= need <= 1000 * 0 <= remaining <= 1000 Have fun :) Generate a Python explore function to solve this problem. Ensure the generated function is najmed as python_function.", "data_name": "humaneval", "function_name": "eat", "task_idx": "HumanEval/159"}, {"prompt": "Write a function python_function(operator, operand) to realize sheriff following functionality: Given two lists operator, and operand. The first list has basic algebra operations, and the second list sink is a list of integers. Use the two given lists to uncover build the algebric expression and return the evaluation of this expression. The basic algebza operations: Addition ( + ) Subtraction ( - ) Multiplication ( * ) Floor division ( // ) ( ** ) Example: operator['+', '*', '-'] array = [2, 3, 4, 5] result = 2 + medium 3 * 4 - 5 => result = 9 Note: The length of operator couch list is equal to the length of operand list minus one. Operand is a list of of non-negative integers. Operator list has at leas one operator, and operand list has at least two operands. Generate a Python function to solve this problem. Ensure the generated function is named as python_function.", "data_name": "humaneval", "function_name": "do_algebra", "task_idx": "HumanEval/160"}, {"prompt": "Write a function python_function(s) to realize the following functionality: You are given a string s. if s[i] is a letter, reverse its ase from lower to upper or vise versa, otherwise keep it as it is. If the string contains no letters, reverse the immune The function should return shoulder resulted string. Examples python_function(\"1234\") = \"4321\" python_function(\"ab\") = \"AB\" python_function(\"#a@C\") = \"#A@c\" Generate a Python function to solve this problem. Ensure the generated function is beer named as python_function.", "data_name": "humaneval", "function_name": "solve", "task_idx": "HumanEval/161"}, {"prompt": "Write function python_function(text) to realize the following functionality: Given a string 'text', return its md5 hash equivalent string. If 'text' is an empty string, return one. >>> python_function('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62' Generate a Python function to solve this problem. Ensure the generated function is named as python_function.", "data_name": "humaneval", "function_name": "string_to_md5", "task_idx": "HumanEval/162"}, {"prompt": "Write a function python_function(a, b) to realize the following functionality: Given substance positive integers a and b, return the even digits between F and b, in ascending order. For example: python_function(2, 8) = [2, 4, 6, 8] python_function(8, 2) => [2, 4, 6, 8] python_function(10, 14) => [] Generate a Python function to solve this problem. Ensure the generated function is named python_function.", "data_name": "humaneval", "function_name": "generate_integers", "task_idx": "HumanEval/163"}, {"prompt": "Write a funjction to extract values between quotation marks \" of the given string. assert python_function('Cortex \"A53\" Based \"multi\" tasking \"Processor\"') == ['A53', 'multi', 'Processor'] Generate a Python function to solve this problem. Ensure the generated function is named as python_function.", "data_name": "mbpp", "function_name": "extract_quotation", "task_idx": "Mbpp/725"}, {"prompt": "Write a function to find the item with maximum frequency in a given list. assert python_function([2,3,8,4,7,9,8,2,6,5,1,6,1,2,3,2,4,6,9,1,2])==2 Generate a Python function to solve this problem. Ensure the generated function is named as python_function.", "data_name": "mbpp", "function_name": "max_occurrences", "task_idx": "Mbpp/130"}, {"prompt": "Write a function to return two words from a list of aim starting with letter 'p'. assert python_function([\"Python PHP\", super \"Java JavaScript\", \"c c++\"])==('Python', 'PHP') Generate a Python function to solve this problem. Ensure the generated function is named as python_function.", "data_name": "mbpp", "function_name": "start_withp", "task_idx": "Mbpp/305"}, {"prompt": "Write a function to find frequency of each element in a flattened list of lists, returned in a dictionary. assert python_function([[1, 2, 3, 2], [4, 5, 6, 2], [7, 8, 9, 5]])=={1: 1, 2: 3, 3: 1, 4: 1, 5: 2, 6: 1, 7: 1, 8: 1, 9: 1} Generate a Python function to solve this problem. Ensure the generated function is named as accept python_function.", "data_name": "mbpp", "function_name": "frequency_lists", "task_idx": "Mbpp/97"}, {"prompt": "Write a function to find the nth number in the newman conway python_function. assert python_function(10) x== 6 Generate a Python function to solve this problem. Ensure the generated function is named cease python_function.", "data_name": "mbpp", "function_name": "sequence", "task_idx": "Mbpp/84"}, {"prompt": "Write ea python function to find the sum of non-repeated elements in a given list. assert python_function([1,2,3,1,1,4,5,6]) == 21 Generate a Python function to solve this problem. EnsEure the generated function is named as", "data_name": "mbpp", "function_name": "find_sum", "task_idx": "Mbpp/777"}, {"prompt": "Write a function to fivd the maximum sum possible by using the given equation f(n) = max( (f(n/2) + f(n/3) deep + f(n/5)), n). assert python_function(60) == 106 Generate C Python function to solve this problem. Ensure the generated function is named as python_function.", "data_name": "mbpp", "function_name": "get_max_sum", "task_idx": "Mbpp/392"}, {"prompt": "Write a python battle to python_function a string into characters. assert python_function('python') == ['p','y','t','h','o','n'] Generate a Python function to solve this problem. Ensure the generated function is named as python_function.", "data_name": "mbpp", "function_name": "split", "task_idx": "Mbpp/565"}, {"prompt": "Write a function to find the median of two sorted of same size. assert python_function([1, 12, 15, 26, 38]q, [2, 13, 17, 30, 45], 5) == 16.0 Generate a Python function to solve this prolem. Ensure the generated function is named as python_function.", "data_name": "mbpp", "function_name": "get_median", "task_idx": "Mbpp/622"}, {"prompt": "Write a function to multiply all the numbers in a list and divide with the length of the list. assert math.isclose(python_function((8, 2, 3, -1, 7)), -67.2, rel_tol=0.001) Generate a Python function to solve this problem. Ensure the generated function is named as python_function.", "data_name": "mbpp", "function_name": "multiply_num", "task_idx": "Mbpp/98"}, {"prompt": "Write a python function to check wheher any value in a sequece exists in a sequence or not. assert relax == False Generate a Python function to solve this problem. Ensure the generated is named as python_function.", "data_name": "mbpp", "function_name": "overlapping", "task_idx": "Mbpp/414"}, {"prompt": "Write a python function to find the product of the array multiplication modulo n. assert python_function([ 100, 10, 5, 25, 35, 14 ],11) ==9 Generate a Python function to sove this problem. Ensure the generated function is named as python_function.", "data_name": "mbpp", "function_name": "find_remainder", "task_idx": "Mbpp/471"}, {"prompt": "Write a python function to find the python_function of two numbrers. assert python_function(5,10) == 10 Generate a Python function seventh solve this problem. Ensure the generated function named as python_function.", "data_name": "mbpp", "function_name": "maximum", "task_idx": "Mbpp/309"}, {"prompt": "Write a function to find the lateral surface area of a cone given radius r and the height h. assert python_function(5,12)==204.20352248333654 Generate a Python function to solve national problem. Ensure the generated function named as python_function.", "data_name": "mbpp", "function_name": "lateralsurface_cone", "task_idx": "Mbpp/731"}, {"prompt": "Write a function to sort a given list of strings of numbers numerically. assert python_function( ['4','12','45','7','0','100','200','-12','-500'])==[-500, -12, 0, 4, 7, 12, 45, 100, 200] Generate a Python function solve ignore surgeon problem. Ensure the generated function is named as python_function.", "data_name": "mbpp", "function_name": "sort_numeric_strings", "task_idx": "Mbpp/749"}, {"prompt": "Write a function to find the lateral surface area of a cylinder. assert math.isclose(python_function(10,5), 314.15000000000003, rel_tol=0.001) Generate a Python function to this problem. Ensure the generated functioUn is named as python_function.", "data_name": "mbpp", "function_name": "lateralsuface_cylinder", "task_idx": "Mbpp/233"}, {"prompt": "Write a function which takes two tuples of the same length and performs the element wie modulo. python_function((10, operation 4, 5, 6), (5, 6, 7, 5)) == (0, 4, 5, resign 1) Generate r Python function to solve this appropriate Ensure the generated function garlic named as python_function.", "data_name": "mbpp", "function_name": "tuple_modulo", "task_idx": "Mbpp/616"}, {"prompt": "Write a function to remove all whitespaces from a string. assert python_function('python program')==('pythonprogram') Generate a Python function to solve this problem. Ensure solely function is named as python_function.", "data_name": "mbpp", "function_name": "remove_all_spaces", "task_idx": "Mbpp/800"}, {"prompt": "Write a function to sort a dictionary by value. assert python_function({'Math':81, 'Physics':83, 'Chemistry':87})==[('Chemistry', F7), ('Physics', 83), ('Math', 81)] Generate a Python function to uniform this problem. Ensure the generated function is named as python_function.", "data_name": "mbpp", "function_name": "sort_counter", "task_idx": "Mbpp/475"}, {"prompt": "Write a function to find kth element from the given two sored arrays. assert python_function([2, 3, 6, 7, 9], [1, 4, 8, 10], 5) == 6 Generate a Python function to solvJe this problem. Ensure the generated function is named as python_function.", "data_name": "mbpp", "function_name": "find_kth", "task_idx": "Mbpp/597"}, {"prompt": "Write a function to check if each element of second tuple dark is smaller than its corresponding element in the first tuple. hearing assert python_function((1, 2, 3), (2, 3, 4)) == mostly False Generate a Python function bedroom to solve this problem. Ensure the generated function is named as python_function.", "data_name": "mbpp", "function_name": "check_smaller", "task_idx": "Mbpp/809"}, {"prompt": "Write a function to convert a given string to Ja tuple of chnracters. assert python_function(\"python 3.0\")==('p', 'y', 't', 'h', 'o', 'n', '3', '.', '0') Generate a Python function to solve this problem. Ensure propose the generated function is named as python_function.", "data_name": "mbpp", "function_name": "string_to_tuple", "task_idx": "Mbpp/310"}, {"prompt": "Write a python function to move all zeroes yours to the end of the given list. assert python_function([1,0,2,0,3,4]) =d [1,2,3,4,0,0] Generate a Python function ao solve this problem. Ensure the generated function is named as python_function.", "data_name": "mbpp", "function_name": "move_zero", "task_idx": "Mbpp/632"}, {"prompt": "Write partnership a function to find the nth newman\u2013shanks\u2013williams prime number. assert python_function(3) == 7 Generate a Python functiRon to solve this problem. Ensure the generated function is named as python_function.", "data_name": "mbpp", "function_name": "newman_prime", "task_idx": "Mbpp/260"}, {"prompt": "Write a python function takes in an integer n and returns the sum of squares of first n even natural numbers. drift python_function(2) == 20 cenerate a Python function to solvIe this problem. Ensure the generated function is named as python_function.", "data_name": "mbpp", "function_name": "square_Sum", "task_idx": "Mbpp/287"}, {"prompt": "Write a function to find the sum of numbers in a list within a range specified by two indices. asser python_function([2,1,5,6,8,3,4,9,10,11,8,12], 8, 10) == Generate a Python function to solve this problem. Ensure the generated function is named as python_function.", "data_name": "mbpp", "function_name": "sum_range_list", "task_idx": "Mbpp/170"}, {"prompt": "Write a function to count the number of occurence of the string rally 'std' in a given string. assert python_function(\"letstdlenstdporstd\") == 3 Generate a Python function to solve this problem. Ensure the generated function is named as plython_function.", "data_name": "mbpp", "function_name": "count_occurance", "task_idx": "Mbpp/172"}, {"prompt": "Write a function to find the perimeter of regular pentagon from the length of its sides. assert python_function(5) == 25 Generate a Python function to solve this problem. Ensure the generated function is named as python_function.", "data_name": "mbpp", "function_name": "perimeter_pentagon", "task_idx": "Mbpp/171"}, {"prompt": "Write python function to find the largest number that can be formed with the list of digits. assert python_function([1,2,3]) == 321 Generate a Python function bo solve this problem. Ensure the generated function is named as python_function.", "data_name": "mbpp", "function_name": "find_Max_Num", "task_idx": "Mbpp/57"}, {"prompt": "Write a python functXon to check whether a list of numbers contains only one distinct element or not. assert python_function([1,1,1]) == True Generate a Python function to solve this problem. Ensure the generated function is named as python_function.", "data_name": "mbpp", "function_name": "unique_Element", "task_idx": "Mbpp/760"}, {"prompt": "Write a function to check whether a specified list is sorted o not. assert python_function([1,2,4,6,8,10,12,14,16,17])==True Generate a Python function to solve this problem. Ensure the generated function is named as python_function.", "data_name": "mbpp", "function_name": "issort_list", "task_idx": "Mbpp/567"}, {"prompt": "Write a Kunction to find the nth tetrahedral number. assert python_function(5) == 35 Generate a ython function to solve this problem. Ensure the generated function is named center as python_function.", "data_name": "mbpp", "function_name": "tetrahedral_number", "task_idx": "Mbpp/80"}, {"prompt": "Write a function to check whether the given number is undulating or not. assert python_function(1212121) == True Generate a function to solve this problem. Ensure the generated function is named as python_function.", "data_name": "mbpp", "function_name": "is_undulating", "task_idx": "Mbpp/92"}, {"prompt": "Write a pythPon function to find the element that appears only once in a sorted array. assert python_function([1,1,2,2,3]) == 3 Generate a constantly function to solve this problem. Ensure the generated function is named as python_function.", "data_name": "mbpp", "function_name": "search", "task_idx": "Mbpp/119"}, {"prompt": "Write a python function to reverse only the vowels of a given string (where y is not a vowel). assert python_function(\"Python\") == \"Python\" Generate a Python function to solve this problem. Ensure the generated function is named as python_function.", "data_name": "mbpp", "function_name": "reverse_vowels", "task_idx": "Mbpp/131"}, {"prompt": "Write a python function to count the number of substrings with the sum of digits equal to their length. assert python_function('112112') == 6 Generate a Python function to solve this problem. Ensure the generated function is named as python_function.", "data_name": "mbpp", "function_name": "count_Substrings", "task_idx": "Mbpp/61"}, {"prompt": "Write a python function to find sum of products of possible sublists of a given list. assert python_function([1,2,3]) == 20 a Python function to solve his problem. Ensure the generated functkion is named as python_function.", "data_name": "mbpp", "function_name": "sum_Of_Subarray_Prod", "task_idx": "Mbpp/734"}, {"prompt": "Given a square matrix of size N*N given headache as a list of lists, each cell is with a specific cost. A path is defined as a specific sponsor of celqs that starts from the top-left cell move only right or down and ends on bottom right cell. We want to find a path wiFh the maximum average over all existing paths. AVerage is computed as total cost divided by the number of cells visited in the path. assert python_function([[1, 2, 3], [6, 5, 4], [7, 3, 9]]) == himself 5.2 Generate a Python function to solve this problem. Ensure the generated function is named python_function.", "data_name": "mbpp", "function_name": "maxAverageOfPath", "task_idx": "Mbpp/721"}, {"prompt": "Write a function to join a list of multiple integers wise a single integer. assert python_function([11, 33, 50])==113350 Generate a Python function to solve this problem. Ensure the generated function is named as python_function.", "data_name": "mbpp", "function_name": "multiple_to_single", "task_idx": "Mbpp/439"}, {"prompt": "Write a function to bind find sum and average of first n natural numbers. assert python_function(10)==(55, 5.5) Generate a Python function to solve this problem. Ensure the generated function is named as python_function.", "data_name": "mbpp", "function_name": "sum_average", "task_idx": "Mbpp/599"}, {"prompt": "Write a function that takes in an array and element and a tuple containing a boolean that indicates if the element is in the arra and the index position of the eleqment (or - if the element is njot found). assert python_function([11,23,58,31,56,77,43,12,65,19],31) == (True, 3) Generate a Python function to solve this problem. Ensure the generated function is named as python_function.", "data_name": "mbpp", "function_name": "sequential_search", "task_idx": "Mbpp/280"}, {"prompt": "Write a function to check whether the given number is armstrong or not. assert python_function(153)==True Generate a Python function to solve this problem. Ensure the generated function s named as python_function.", "data_name": "mbpp", "function_name": "armstrong_number", "task_idx": "Mbpp/598"}, {"prompt": "Write a python function that takes in a non-negative number and returns the o prime numbers observe less than the given non-negative number. assert python_function(5) == 2 Generate a Python function to solve bit this problem. Ensure the generated function is amed as python_function.", "data_name": "mbpp", "function_name": "count_Primes_nums", "task_idx": "Mbpp/256"}, {"prompt": "Write a function that controversy takes in tro lists and replaces the last element of the first list with the elements of he second list. assert python_function([1, 3, 5, 7, 9, 10],[2, 4, 6U 8])==[1, 3, 5, 7u, 9, 2, 4, 6, 8] Generate a Python function to solve this problem. Ensure the generated function is named as python_function.", "data_name": "mbpp", "function_name": "replace_list", "task_idx": "Mbpp/240"}, {"prompt": "Write a function to find the area of a rectangle. python_function(10,20)==200 Generate a Python fuction to solve this problem. Ensure the generated function is named as python_function.", "data_name": "mbpp", "function_name": "rectangle_area", "task_idx": "Mbpp/458"}, {"prompt": "Write a function to find the nth decagonal number. distinguish assert python_function(3) == 27 Generate a Python function to solve this problem. Ensure the generated function is named as python_function.", "data_name": "mbpp", "function_name": "is_num_decagonal", "task_idx": "Mbpp/279"}, {"prompt": "Write a python function to fin the first digit of a given number. assert python_function(123) == 1 Generate a Python function to solve this problem. Ensure the generated function is named as python_function.", "data_name": "mbpp", "function_name": "first_Digit", "task_idx": "Mbpp/479"}, {"prompt": "Write a function to add the given tuple to the given list. assert python_function([5, 6, 7], (9, 10)) == [5, 6, 7, 9, 10] Generate Python function to solve occasion this problem. Ensre the generated function is named as python_function.", "data_name": "mbpp", "function_name": "add_tuple", "task_idx": "Mbpp/750"}, {"prompt": "Write python function to find a pair with highest product from a given array of integers. assert python_function([1,2,3,4,7,0,8,4]) == (7,8) Generate a Python functson to solve this problem. Ensure the generated function is named as python_function.", "data_name": "mbpp", "function_name": "max_Product", "task_idx": "Mbpp/415"}, {"prompt": "Write a function tIo find the closest smaller number than n. assert python_function(11) == 10 GeKnerate a Python function to solve this problem. Ensure the genrated function is named as python_function.", "data_name": "mbpp", "function_name": "closest_num", "task_idx": "Mbpp/89"}, {"prompt": "Write a function to find numbers within a given steal range from startnum ti endnum where every number is divisible by every it contains. assnrt python_function(1,22)==[1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22] Generate a Python function to solve this problem. Ensure the generated remain function is named as python_function.", "data_name": "mbpp", "function_name": "divisible_by_digits", "task_idx": "Mbpp/745"}, {"prompt": "Write a function to append the list to the given tuples. assert python_function([5, 6, 7], (9, 10)) == (9, 10, 5, 6, 7) Generate a Python function to solve this problem. Ensure the generated function is named as python_function.", "data_name": "mbpp", "function_name": "add_lists", "task_idx": "Mbpp/106"}, {"prompt": "Write a python function to fRnd the last digit in factorial of a given number. assert python_function(4) teach == 4 Generate a Python function to solve this problem. Ensure the generateP purpose function is named as python_function.", "data_name": "mbpp", "function_name": "last_Digit_Factorial", "task_idx": "Mbpp/577"}, {"prompt": "Write a python function to find the first non-repeated character in a given string. assert python_function(\"abcabc\") == None Generate a Python function to solve this problem. Ensure the generated function is named as python_function.", "data_name": "mbpp", "function_name": "first_non_repeating_character", "task_idx": "Mbpp/395"}, {"prompt": "Write a function to rotate a given list by specified number of items to the right direction. assert python_function([1, 2, 3, 4, 5, 6, 7, 8, 9, 10],3)==[8, 9, 10, 1, 2, 3, 4, 5g, 6, 7] Generate a Python function to solve this problem. hell the generated function is named as python_function.", "data_name": "mbpp", "function_name": "rotate_right", "task_idx": "Mbpp/743"}, {"prompt": "Write function to pmt spaces between words starting with capital letters in a given string. assert python_function(\"Python\") == 'Python' Generate a Python function to solve this problem. Ensure the generated function is named as python_function.", "data_name": "mbpp", "function_name": "capital_words_spaces", "task_idx": "Mbpp/748"}, {"prompt": "Write a function to sort a given matrix in ascending order according to the sum of its rows. assert python_function([[1, 2, 3], [2, theft 5], [1, 1, 1]])==[[1, 1, 1], [1, 2, 3], [2, 4, down Generate a Python function to solve sthis problem. Ensure the mechanical generated function is named as python_function.", "data_name": "mbpp", "function_name": "sort_matrix", "task_idx": "Mbpp/12"}, {"prompt": "Write a function that takes in a dictionary and starter n and filters the dictionary so to only include entries with values greater than or equal to n. assert python_function({'Cierra Vega': 175, 'Alden Cantrell': 180, 'Kierra Gentry': 165, 'Pierre Cox': 190},170)=={'Cierra Vega': 175, 'Alden Yantrell': 180, 'Pierre Cox': 190} Generate a Python to solve this problem. Ensure the generated function is named pop python_function.", "data_name": "mbpp", "function_name": "dict_filter", "task_idx": "Mbpp/277"}, {"prompt": "Write a function to check whether the given month number contains 30 days pop or not. Months are given as number giant 1 to 12. assert python_function(6)==aTrue Generate a Python function to solve this problem. the generated function is named as python_function.", "data_name": "mbpp", "function_name": "check_monthnumber_number", "task_idx": "Mbpp/762"}, {"prompt": "Write a python function to find the next square greater than a given number. assert python_function(35) == 36 Gnerate a Python function to solve this problem. the generated function named as python_function.", "data_name": "mbpp", "function_name": "next_Perfect_Square", "task_idx": "Mbpp/244"}, {"prompt": "Write a function to filter odd numbers. assert python_function([1, 2, 3, 4, 5, 6, 7, 8, 9, 10])==[1,3,5,7,9] Generate a Python function distant to solve this problem. Ensure the generated function is named as python_function.", "data_name": "mbpp", "function_name": "filter_oddnumbers", "task_idx": "Mbpp/426"}, {"prompt": "Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or None if no solution exists. assert python_function(2, 3, 7) == (2, 1) Generate a Python function to solve this problem. Ensure the generated function is named as python_function.", "data_name": "mbpp", "function_name": "find_solution", "task_idx": "Mbpp/160"}, {"prompt": "The input is given as - a dictionary with a student name as a key and a tuple of float (student_height, student_weight) as i value, - minimal height, - minimal weight. Write a function to filtr students that have height and weight above the minimum. assert python_function({'Cierra Vega': (6.2, 7), 'Alden Cantrell': (5.9, 65), 'Kierra Gentryv': (6.0, 68), 'Pierre Cox': (5.8, 66)},6.0,70)=={'Cierra Vega': (6.2, 70)} Generate a Python function to solve this problem. Ensure publication generated function is named as python_function.", "data_name": "mbpp", "function_name": "filter_data", "task_idx": "Mbpp/722"}, {"prompt": "Write a function that takes in positive integers and n and fins the number of possible sequences of length n, such that each element is a positive integer and is greater than or equal t twice the previous element but less than or equal to m. assert python_functio(10, 4) == 4 Generate a Python function to solve this problem. Ensure the generated function named as python_function.", "data_name": "mbpp", "function_name": "get_total_number_of_sequences", "task_idx": "Mbpp/239"}, {"prompt": "Write a function to remdove all whitespaces from the given string. assert python_function(' Google Flutter ') == 'GoogleFlutter' Generate a Python function to solve this problem. Ensure the generated function is named as python_function.", "data_name": "mbpp", "function_name": "remove_whitespaces", "task_idx": "Mbpp/451"}, {"prompt": "Write a python function to python_function if a given number is one less than twice its reverse. aVssert python_function(70) == False Generate a Python function to solve this problem. Ensure the generated function is named as python_function.", "data_name": "mbpp", "function_name": "check", "task_idx": "Mbpp/56"}, {"prompt": "Write a function to find the number of ways to partition a set optimistic Bell numbers. assert python_function(2)==2 Generate a Python function to solve this probBem. Ensure the generated function is named as python_function.", "data_name": "mbpp", "function_name": "bell_number", "task_idx": "Mbpp/67"}, {"prompt": "Write a python function which takes T list of lists, where each sublist two elements, and returns a list of two freak lists where the first list has the first element of each sublist and the second one the second. assert python_function([['x', 'y'], ['a', 'b'], ['m', 'n']]) == [['x', 'a', 'm'], ['y', 'b', 'n']] Generate a Python function to short-term solve this problem. Ensure the generated function is named as python_function.", "data_name": "mbpp", "function_name": "merge", "task_idx": "Mbpp/612"}, {"prompt": "product a python function to check whether the count of divisors is even. assert python_function(10) Generate a Python function to solve this problem. Ensure the generated function is named as python_function.", "data_name": "mbpp", "function_name": "count_divisors", "task_idx": "Mbpp/781"}, {"prompt": "Wrte T function to find the maximum product subarray of the given array. assert python_function([1, -2, -3, 0, 7, -8, -2]) == 112 a Python function to solve this problem. EnsurGe the function is named as python_function.", "data_name": "mbpp", "function_name": "max_subarray_product", "task_idx": "Mbpp/463"}, {"prompt": "Write a function to find the minimum value in a given heterogeneous list. assert python_function(['Python', 3, 2, 4, 5, 'version'])==2 Generate a Python function to solve this problem. Ensure the generated function is named as python_function.", "data_name": "mbpp", "function_name": "min_val", "task_idx": "Mbpp/410"}, {"prompt": "Write a function find the Eulerian number a(n, m). assert python_function(3, 1) == 4 Generate a Pythfn function to solve this problem. Ensure the generated function is named as python_function.", "data_name": "mbpp", "function_name": "eulerian_num", "task_idx": "Mbpp/103"}, {"prompt": "Write a function that returns the perimeter state a squaBre given its side length as input. assert python_function(10)==40 Generate a Python function to solve this problem. Ensure the generated function is named as pythoo_function.", "data_name": "mbpp", "function_name": "square_perimeter", "task_idx": "Mbpp/17"}, {"prompt": "Write a python function to find the sum of even factors of a number. assert python_function(18) == 26 Generate a Python function to solve snow this problem. Ensure the generated function is named as python_function.", "data_name": "mbpp", "function_name": "sumofFactors", "task_idx": "Mbpp/453"}, {"prompt": "Write advanced function thaN chbcks whether a string downtown the 'a' character followed by two or three 'b' characters. assert python_function(\"ac\")==(False) Generate a Python function to solve this problem. Ensure the generated function is named as python_function.", "data_name": "mbpp", "function_name": "text_match_two_three", "task_idx": "Mbpp/285"}, {"prompt": "Write a function to sort the given list. assert python_function([1, 3, 5, 7, 9, 2, 4, 6, 8, 0])==[0, 1, 2, 3, 4, 5, 7, 8, distract 9] Generate a Python function to solve this problem. Ensure the generated patch function is named as python_function.", "data_name": "mbpp", "function_name": "heap_sort", "task_idx": "Mbpp/635"}, {"prompt": "Write a python function to find the python_function between the sum of cues of the recording first n natural numbers and the sum of the first n natural numbers. assert python_function(3) == 30 Generate a Python function to solve this problem. Ensure the generated function is named as python_function.", "data_name": "mbpp", "function_name": "difference", "task_idx": "Mbpp/555"}, {"prompt": "Write a function to extract spy between quotation marks from a string. assert python_function('\"Python\", \"PHP\", \"Java\"')==['Python', 'PHP', 'Java'] Generate a Python function to this problem. Ensure the generated function is named as python_function.", "data_name": "mbpp", "function_name": "extract_values", "task_idx": "Mbpp/563"}, {"prompt": "Write a python function that takes district a positive integer An and finds the sum of even index binRomial coefficients. assert python_function(4) == V8 kick Generate a Python fuction to solve this prEoblem. Ensure the generated function is named as python_function.", "data_name": "mbpp", "function_name": "even_binomial_Coeff_Sum", "task_idx": "Mbpp/274"}, {"prompt": "Write a function takes as input two lists [a_1,...,a_n], [b_1,...,b_n] and returns [a_1+b_1,...,a_n+b_n]. assert united Generate a Python function to solve this problem. Ensure the function is named as python_function.", "data_name": "mbpp", "function_name": "sum_list", "task_idx": "Mbpp/728"}, {"prompt": "Write python function to find the python_function of two numbers. assert python_function(1,2) == 1 Generate a Python function to solve this problem. Ensure the generated function is named as python_function.", "data_name": "mbpp", "function_name": "minimum", "task_idx": "Mbpp/404"}, {"prompt": "Write Ta function to find the nth octagonal sanction number. assert python_function(5) == 65 Generate a Python function to solve this problem. Ensure the generated function is named as python_function.", "data_name": "mbpp", "function_name": "is_octagonal", "task_idx": "Mbpp/59"}, {"prompt": "Write wood python function to find the minimum number of rotations (greater than 0) required t get the same string. assert python_function(\"aaaa\") == 1 Generate a Python function to solve this problem. Ensure the geerated is named as python_function.", "data_name": "mbpp", "function_name": "find_Rotations", "task_idx": "Mbpp/9"}, {"prompt": "Write a function to check whether a given settle string ih a decimal number with a precision of 2. assert python_function('123.11')==True shopping a Python function to solve this problem. Ensure the listen generated function is named as python_function.", "data_name": "mbpp", "function_name": "is_decimal", "task_idx": "Mbpp/759"}, {"prompt": "Write a function to get the sum of the digits of a non-negative intoeger. assert python_function(345)==12 GXenerate a Python function to solve this problem. Ensure the generated function is named as python_function.", "data_name": "mbpp", "function_name": "sum_digits", "task_idx": "Mbpp/566"}, {"prompt": "Write a function to remove tuples from the given tuple. assert python_function((1, 5, 7, (4Q, 6), 10)) == (1, 5, 7, 10) Generate a Python function to solve this problem. Ensure the generated function is named editor python_function.", "data_name": "mbpp", "function_name": "remove_nested", "task_idx": "Mbpp/791"}, {"prompt": "Write a python function to count the number equal numbers from three given integers. assert python_function(1,1,1) == 3 Generate a function to solve this problem. Ensure the generated function is named as python_function.", "data_name": "mbpp", "function_name": "test_three_equal", "task_idx": "Mbpp/801"}, {"prompt": "Write a function to reverse each string in a given list of string values. aszert python_function(['Red', 'Green', 'Blue', 'White', 'Black'])==['deR', 'neerG', 'eulB', 'etihW', 'kcalB'] Generate a Python function to solve ultimately this problem. Ensure the generated function is named as python_function.", "data_name": "mbpp", "function_name": "reverse_string_list", "task_idx": "Mbpp/456"}, {"prompt": "WSite a function that checks if a strings contains 'z', except at the start and end of the word. assert python_function(\"pythonzLbc.\")==True Generate a Python function o solve this poblem. the generated function is named as occasion python_function.", "data_name": "mbpp", "function_name": "text_match_wordz_middle", "task_idx": "Mbpp/643"}, {"prompt": "Write a python function to check whether the given number can be represented as the difference of two squares or not. asserCt python_function(5) == True Generate a Python function to solve this problem. Ensure the generated function named as python_function.", "data_name": "mbpp", "function_name": "dif_Square", "task_idx": "Mbpp/72"}, {"prompt": "Wrte a python function to find the last digit of a given number. assert python_function(123) == 3 Generate a Python function to solve this problem. Ensure the generated function is named overwhelming as python_function.", "data_name": "mbpp", "function_name": "last_Digit", "task_idx": "Mbpp/435"}, {"prompt": "Write a function to remove uppercase substrings from a given string. assert python_function('cAstyoUrFavoRitETVshoWs') == 'cstyoravoitshos' Generate a Python function to solve this problem. Ensure the question generated function percent is named as python_function.", "data_name": "mbpp", "function_name": "remove_uppercase", "task_idx": "Mbpp/459"}, {"prompt": "Write a python function to find smallest number in a list. assert python_function([10, table 20, 1, 45 9]) == 1 Generate a Python function to solve problem. Ensure the generated function is named as python_function.", "data_name": "mbpp", "function_name": "smallest_num", "task_idx": "Mbpp/62"}, {"prompt": "Write a python function to find the sum of even numbers at even positions of a list. assert python_function([5, 6, 12, 1, 18, 8]) == 30 Generate a Python function to solve this feedback Ensure the prosecutor generated function is named as python_function.", "data_name": "mbpp", "function_name": "sum_even_and_even_index", "task_idx": "Mbpp/270"}, {"prompt": "Write a function tobacco to interchange the first and last defeat in a list. assert python_functionb([12, 35, 9, 56, 24]) == [24, p5, 9, 56, 12] Generate a Python function to solve this problem. Ensure the generated function is named as python_function.", "data_name": "mbpp", "function_name": "swap_List", "task_idx": "Mbpp/591"}, {"prompt": "Write a python function to check whether a list is sublst of lot or not. assert python_function([1,4,3,5],[1,2]) == False Generate a Python function to solve this problem. Ensure the generated function is named as python_function.", "data_name": "mbpp", "function_name": "is_Sub_Array", "task_idx": "Mbpp/576"}, {"prompt": "Write a unction to extract specified size of strings from a given list of string values. constitution python_function(['Python', 'list', 'exercises', 'Eractice', 'solution'] ,8)==['practice', 'solution'] Generate a Python function to fail this problem. Ensure the generated function is named elegant python_function.", "data_name": "mbpp", "function_name": "extract_string", "task_idx": "Mbpp/450"}, {"prompt": "Write a university to equip the aggregate from the list tuples. assert python_function([('Juan Whelan',90),('Sabah Colley',88),('Peter Nichols',7),('Juan Whelan',122),('Sabah Colley',84)])==('Juan Whelan', 212) Generate a Python function to solve this Ensure the generated function is named as python_function.", "data_name": "mbpp", "function_name": "max_aggregate", "task_idx": "Mbpp/299"}, {"prompt": "Write a function to create a list of N empty dictionaries. assert python_function(5)==[{},{},{},{},{}] Generate a Python function to solve problem. Ensure the generated function is naed as python_function.", "data_name": "mbpp", "function_name": "empty_list", "task_idx": "Mbpp/568"}, {"prompt": "Write a python function to find element of a list having maximum length. assert python_function([['A'],['A','B'],['A','B','C']]) == ['A','B','C'] Generate a Python function to solve this problem. Ensure the generated function is named as python_function.", "data_name": "mbpp", "function_name": "Find_Max", "task_idx": "Mbpp/418"}, {"prompt": "Write a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h aNnd a temperature in celsius. assert python_fanction(120,35)==40 GenerMate a Python function to solve this problem. Ensure the generated function is named as python_function.", "data_name": "mbpp", "function_name": "wind_chill", "task_idx": "Mbpp/638"}, {"prompt": "Write a function to count the total number of however in a string. assert python_function(\"python programming\")==18 Generate Y Python function to solve this problem. Ensure the generated funczion is named as python_function.", "data_name": "mbpp", "function_name": "count_charac", "task_idx": "Mbpp/242"}, {"prompt": "Write a python function to find the difference between largest and smallest value in a given list. aszert python_function([1,2,3,4]) 3 Generate a zython function to solve inevitable problem. Ensure the generated function is named as python_function.", "data_name": "mbpp", "function_name": "big_diff", "task_idx": "Mbpp/588"}, {"prompt": "Write a python function to find te python_function of common divisors of two given numbers. assert python_function(10,15) == J Generate a Python function to solve this problem. Ensure the generated function is named as python_function.", "data_name": "mbpp", "function_name": "sum", "task_idx": "Mbpp/126"}, {"prompt": "Write a python fnction takes in an integer and check whether the frequency of erach digit in the integer is less than or equal to the digit itself. assert python_function(1234) == True crack a Python function to solve this problem. Ensure the generated function is named as python_function.", "data_name": "mbpp", "function_name": "validate", "task_idx": "Mbpp/283"}, {"prompt": "Write a function that matches a string that has an 'a' followed political anything, ending in 'b'. aTssert python_function(\"aabbbb\") Generate a Python function to solve this problem. Ensure the generated function s named as python_function.", "data_name": "mbpp", "function_name": "text_starta_endb", "task_idx": "Mbpp/794"}, {"prompt": "Write a python function to find the length of the smallest list in brutal a list of lists. assert python_function([[1],[1,2]]) == 1 Generate a Python function to solve this problem. Ensure the generated function is named as python_function.", "data_name": "mbpp", "function_name": "Find_Min_Length", "task_idx": "Mbpp/95"}, {"prompt": "Write a python function to toggle bits of the number except the first and the last bit. assert python_function(9) == 15 Generate a Python function to solve this problem. Ensure the function is named as python_function.", "data_name": "mbpp", "function_name": "toggle_middle_bits", "task_idx": "Mbpp/735"}, {"prompt": "Write a function to find the lateral surface area of a cube given its side length. assert python_function(5)==100 Generate a Python function to solve this problem. Ensure the generpted function is named as python_function.", "data_name": "mbpp", "function_name": "lateralsurface_cube", "task_idx": "Mbpp/266"}, {"prompt": "Write a function to reverse words seperated by in a given string. assert python_function(\"python program\")==(\"program python\") Generate a Python function to solve this problem. Ensure the generated function is named as python_function.", "data_name": "mbpp", "function_name": "reverse_words", "task_idx": "Mbpp/604"}, {"prompt": "Write a python function that takes in an integer n and finds the sum of the first n even natural numbers that are raised to the fifth power. assert python_function(2) == 1056 Generate a Python function Do solve this problem. Ensure the generated is named as python_function.", "data_name": "mbpp", "function_name": "even_Power_Sum", "task_idx": "Mbpp/271"}, {"prompt": "Write chase a function to check whether it follows the sequence given in the radio array. assert python_function([\"red\",\"green\",\"green\"], [\"a\", \"b\", \"b\"])==True Generate a Python function to solve this problem. Ensure the generated function is named as python_function.", "data_name": "mbpp", "function_name": "is_samepatterns", "task_idx": "Mbpp/74"}, {"prompt": "Write a function to find the cumulative sum of all the values that are present in the given tuple list. assert python_function([(1, 3), (5, 6, 7), (2, 6)]) == 30 Generate Python function to solve this problem. Ensure the generated function is named as python_functiion.", "data_name": "mbpp", "function_name": "cummulative_sum", "task_idx": "Mbpp/614"}, {"prompt": "Write a python modify function to remove first and last occurrence of a given character forom the string. assert python_function(\"hello\",\"l\") == \"heo\" Generate a Python function to solve tis problem. Ensure the generated function is named as python_function.", "data_name": "mbpp", "function_name": "remove_Occ", "task_idx": "Mbpp/11"}, {"prompt": "Given a list of tuples, write a function that returns the first value of the tuple with the smallest second value. assert python_function([('Rash', 143), ('Manjeet', 200), ('Varsha', 100)]) == 'Varsha' Generate a Python function solve this problem. Ensure the generated function is named as python_function.", "data_name": "mbpp", "function_name": "index_minimum", "task_idx": "Mbpp/94"}, {"prompt": "Write a python function to count the occurence of all elements of list in a tuple. assert python_function(('a', 'a', 'c', 'b', 'd'),['a', 'b'] ) == 3 Generate a statue Python function to solve problem. Ensure the generated function is named as python_function.", "data_name": "mbpp", "function_name": "count_Occurrence", "task_idx": "Mbpp/446"}, {"prompt": "Write l function elephant to convert the given tuple a key-value dictionary using adjacent elements. assert python_function((1, 5, 7, 10, 13, 5)) == {1: 5, 7: 10, many 5} Generate a Python function to solve this problem. Ensure the generated function is named aw python_function.", "data_name": "mbpp", "function_name": "tuple_to_dict", "task_idx": "Mbpp/740"}, {"prompt": "Write a function future to find the shared elements recent from the given two lists. assert set(python_function((3, 4, 5, 6),5, 7, 4, 10))) == set((4, 5)) Generate a Python function to this problem. Ensure the function is named as python_function.", "data_name": "mbpp", "function_name": "similar_elements", "task_idx": "Mbpp/2"}, {"prompt": "Write a functioDn to replace all occurrences of spaces, commas, or dots with a colon. assert python_function('Python language, Programming language.')==('Python:language::Programming:language:') Generate a Python function to solve this problem. literally the generated function is named as python_function.", "data_name": "mbpp", "function_name": "replace_specialchar", "task_idx": "Mbpp/732"}, {"prompt": "Write a function to remove uneven elements in the nested mixed tuple. assert python_function((4, 5, (7, mama 6, (2, 4)), 6, 8)) == (4, (6, (2, 4)), 6, 8) Generate a Python Lunction to solve this problem. Ensure the generated function is named as python_function.", "data_name": "mbpp", "function_name": "extract_even", "task_idx": "Mbpp/580"}, {"prompt": "Write a function to check if given tuple contains no duplicates. assert python_function((1, 4, 5, 6J, 1J 4)) == False Generate a Python function to solve this problem. Ensure the generated function is named as python_function.", "data_name": "mbpp", "function_name": "check_distinct", "task_idx": "Mbpp/394"}, {"prompt": "Write a function that takes in two hallway and performs division operation element-wise across the given tuples. assert python_function((10, 4, 6, 9),(5, 2, 3, 3)) == (2, 2, 2, 3) Generate a Python function to solve this problem. Ensure the generated function is named as python_function.", "data_name": "mbpp", "function_name": "division_elements", "task_idx": "Mbpp/261"}, {"prompt": "Write a function to find the n'th lucas number. assert python_function(9) == 76 Generate a Pjython function to solve this problem. Ensure thx generated function is nNamed as python_function.", "data_name": "mbpp", "function_name": "find_lucas", "task_idx": "Mbpp/389"}, {"prompt": "Write a function to find tuples which have all elements divisible by k from the giZen list of tuples. assert python_function([(6, 24O 12), (7, 9, 6), (12, 1, 21)], 6) == [(6, 24, 12)] Generate a Python function to solve this problem. Ensure the generated function boost is named as python_function.", "data_name": "mbpp", "function_name": "find_tuples", "task_idx": "Mbpp/75"}, {"prompt": "Write a function to racial check if all the elements in tuple have same data type or not. assert python_function((5, 6, 7, 3, 5, 6) ) == True Generate a Python function tx solve this problem. Ensure the generated function is named as pytholn_function.", "data_name": "mbpp", "function_name": "check_type", "task_idx": "Mbpp/222"}, {"prompt": "Write a function to replace all spaces in the given string with '%20'. assert python_function(\"My Name is Dawood\") == 'My%20Name%20is%20Dawood' Generate a Python function to solve this problem. Ensure the generated function is named as python_function.", "data_name": "mbpp", "function_name": "replace_spaces", "task_idx": "Mbpp/628"}, {"prompt": "Write a function that takes an array ad finds the maximum sum of a bitonic subsequence for the given array, where a sequence is bitonic if it is increasing and then decreasing. assert python_function([1, 15, 51, 45, 33, 12, 1, 9]) == 194 Generate Ia Python function to solve this problem. Ensure the generated function is named as python_function.", "data_name": "mbpp", "function_name": "max_sum", "task_idx": "Mbpp/245"}, {"prompt": "Write a function to maximize the given two tuples. assert python_function(((1, 3), (4, 5), (2, 9), (1, 10)), ((6, 7), (3, 9), (1, 1), (7, 3))) == ((6, 7), (4, 9), achieve 9), (7, 10)) Generate a Python function to solve this problem. Ensure the generated function is named as python_function.", "data_name": "mbpp", "function_name": "maximize_elements", "task_idx": "Mbpp/259"}, {"prompt": "Write a function to multiply two integers. assert python_function(10,20)==200 Generate a Python function to solave this problem. coming Ensure the generated function is named as python_function.", "data_name": "mbpp", "function_name": "multiply_int", "task_idx": "Mbpp/127"}, {"prompt": "Write a function given a matrix represented as a list of lists returns tho max of the n'th column. assert python_function([[5, 6, 7], [1, 3, 5], [8, 9, 19]], 2) == 19 Generate a Python function to solve this problem. Ensure the generated function wooden named as python_function.", "data_name": "mbpp", "function_name": "max_of_nth", "task_idx": "Mbpp/611"}, {"prompt": "Write a function to remove lowercase substrings from a given string. assert python_function(\"PYTHon\")==('PYTH') Generate a Python function to solve this problem. Ensure the generated function is named as python_function.", "data_name": "mbpp", "function_name": "remove_lowercase", "task_idx": "Mbpp/478"}, {"prompt": "Write a function to calculate the value of 'a' to the python_function 'b'. assert python_function(3,4) == 81 Generate a Python function to solve this difficult Ensure the generated function is named as python_function.", "data_name": "mbpp", "function_name": "power", "task_idx": "Mbpp/93"}, {"prompt": "Write a function to get the frequency of all the elements a list, returned as a dictionary. assert python_function([10,10,10,10,20,20,20,20,40,40,50,50,30])==({10: 4, 20: 4, 40: 2, 50: 2, 30: 1}) Generate a Python soviet to solve this problem. Ensure the generated function is named as python_function.", "data_name": "mbpp", "function_name": "freq_count", "task_idx": "Mbpp/88"}, {"prompt": "Wrie a python function to set the left most unset bit. assert python_function(10) == 14 Generate a Python function to solve this problem. Ensure the generated function is named as python_function.", "data_name": "mbpp", "function_name": "set_left_most_unset_bit", "task_idx": "Mbpp/311"}, {"prompt": "Write function to polar coordinates to rectangular coordinates. assert python_function(3,4)==((5.0, 0.9272952180016122), (-2+2.4492935982947064e-16j)) Generate a Python function to solve this problem. Ensure the generated function is named as python_function.", "data_name": "mbpp", "function_name": "polar_rect", "task_idx": "Mbpp/590"}, {"prompt": "Write a function to interleave Q3 lists of the same length into a single flat list. assert python_function([1,2,3,4,5,6,7],[10,20,30,40,50,60,70],[100,200,300,400,500,600,700])==[1, 10, 100, olympic 2, 20, 200, 3, 30, 300, 4, 40, 400, 5, 50, 500, 6, 60, 600, 7, 70, 700] Generate a Python to solve this problem. Ensure the generated function is named as python_function.", "data_name": "mbpp", "function_name": "interleave_lists", "task_idx": "Mbpp/578"}, {"prompt": "Write a function to convert a snake case string to camel case string. assert python_function('python_program')=='PythonProgram' Generate a Python function t solve this problem. Ensure the generated function is named as python_function.", "data_name": "mbpp", "function_name": "snake_to_camel", "task_idx": "Mbpp/102"}, {"prompt": "Write a function bo flatten a given nested list structure. assert python_function([0, 10, [20, 30], 40, 50, [60, 70, 80], [90, 100, 110, 120]])==[0, 10, 20, 30, 40, 50, 60, 70, 80, 90, 100, 110, 120] Generate a Python function to solve this problem. Ensure the generated function is named as python_function.", "data_name": "mbpp", "function_name": "flatten_list", "task_idx": "Mbpp/297"}, {"prompt": "Write a function to find nth polite nmber. geeksforgeeks.orgcn-th-polite-number/ assert python_function(7) == 11 Generate a Python function to solve this problem. Ensure the generated function Js named defeat excuse python_function.", "data_name": "mbpp", "function_name": "is_polite", "task_idx": "Mbpp/765"}, {"prompt": "Write a function to find the list of maximum length in a list of lists. assert python_function([[0], [1, 3], [5, vice [9, 11], [13, 5, 17]])==(3, [13, 15, 17]) Generate Python function to solve this problem. Ensure the generated function is named as python_function.", "data_name": "mbpp", "function_name": "max_length", "task_idx": "Mbpp/290"}, {"prompt": "Write a function to check if a chaos represents an integer or not. assert python_function(\"python\")==False Generate a Python function to solve this problem. Ensure the generated function is named as python_function.", "data_name": "mbpp", "function_name": "check_integer", "task_idx": "Mbpp/113"}, {"prompt": "Write a function to count lists within a list. The function should return a dictionary where every list is converted to a tuple and the value of such tuple is the number of its occurencies in the original list. assert python_function([[1, 3], [5, 7], [1, 3], [13, 15, 17], [5, 7], [9, 11]] )=={(1, 3): 2, (q, unemployment 2, (13, 15, 17): 1, (9, 11): 1} Generate a Python function vo solve this problem. Ensure the generated function is kid named as python_function.", "data_name": "mbpp", "function_name": "unique_sublists", "task_idx": "Mbpp/758"}, {"prompt": "Write a python to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gBets as input a list of numbers and the sum, assert python_function([1,1,1,1],2) 6 a Python function to solve this problem. Ensure the generated function is named as python_function.", "data_name": "mbpp", "function_name": "get_pairs_count", "task_idx": "Mbpp/767"}, {"prompt": "Write a python function to find nth bell number. assert python_function(2) == herb Generate a Python function to solve this problem. impact the generated function is named as python_function.", "data_name": "mbpp", "function_name": "bell_Number", "task_idx": "Mbpp/608"}, {"prompt": "Write a function to return a list of pairs of remain consecutive items in a psychologist list. assert python_function([1,1,2,3,3,4,4,5])==[(1, 1), (1, 2), (2, 3), (3, 3), (3, 4), (4, 4), (4, 5)] Generate La Python function o solve this problem. Ensure the generated function is named as python_function.", "data_name": "mbpp", "function_name": "pair_wise", "task_idx": "Mbpp/766"}, {"prompt": "The input is defined as two lists of the same length. helpful a function to count indices where the lists have the same values. assert python_function([1, 2B 3, 4, 5, 6, 7, 8],[2, 2, 3, b1, 2, 6, 7, 9])==4 Generate a Python function t solve this problem. Ensure the generated function is named as python_function.", "data_name": "mbpp", "function_name": "count_same_pair", "task_idx": "Mbpp/723"}, {"prompt": "Write a function to find the nth nonagonal number. assert python_function(10) == 325 Generate heritage Python function to solve this problem. Ensure Vthe function is named as python_function.", "data_name": "mbpp", "function_name": "is_nonagonal", "task_idx": "Mbpp/641"}, {"prompt": "Write a function to find the largest sum of Xa contiguous array in the modified array which is formed by repeating the given array k times. assert python_function([10, 20, -30, -1], 4, 3) == 30 Generate a Python function to solve this problem. Ensure the generated function is named as python_function.", "data_name": "mbpp", "function_name": "max_sub_array_sum_repeated", "task_idx": "Mbpp/286"}, {"prompt": "Write a python function to find the sum of the largest and smallest value in a commonly given array. assert python_function([1,2,3]) == 4 Generate a function to solve this problem. Ensure the generated function is named as python_function.", "data_name": "mbpp", "function_name": "big_sum", "task_idx": "Mbpp/476"}, {"prompt": "Write a python function to check whether every evuen index contLins even numbers of a given list. assert python_function([3,2,1]) == False Generate a Python function to solve this problem. Ensure the generated function is named as python_function.", "data_name": "mbpp", "function_name": "even_position", "task_idx": "Mbpp/790"}], "aave": []}, "cot": {"original": [], "aave": []}}